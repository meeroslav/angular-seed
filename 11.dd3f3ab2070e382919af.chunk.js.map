{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.module.ts","./node_modules/rxjs/_esm5/operators/sample.js","./node_modules/rxjs/_esm5/observable/FromEventObservable.js","./node_modules/rxjs/_esm5/observable/fromEvent.js","./node_modules/rxjs/_esm5/add/operator/sample.js","./node_modules/rxjs/_esm5/operator/sample.js","./node_modules/rxjs/_esm5/observable/IntervalObservable.js","./node_modules/rxjs/_esm5/observable/interval.js","./node_modules/rxjs/_esm5/add/observable/interval.js","./node_modules/rxjs/_esm5/add/observable/fromEvent.js","./src/app/home/home.component.html","./src/app/home/home.component.scss"],"names":["home_component_HomeComponent","HomeComponent","element","this","looper","showList","showMap","prototype","ngOnInit","repositionTheDot","data","dot","nativeElement","querySelector","cords","world_map_component","GetPercentagePosition","style","left","x","top","y","setView","type","__decorate","Object","core","selector","host","class","home_module_routes","path","component","home_module_HomeModule","HomeModule","imports","core_es5","shared_module","common","router","forChild","custom_components_module","declarations","_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","__extends","d","b","p","hasOwnProperty","__","constructor","create","sample","notifier","source","lift","SampleOperator","call","subscriber","sampleSubscriber","SampleSubscriber","subscription","subscribe","add","_super","apply","arguments","hasValue","_next","value","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","emitValue","notifyComplete","destination","next","_OuterSubscriber__WEBPACK_IMPORTED_MODULE_0__","FromEventObservable_extends","FromEventObservable_toString","toString","FromEventObservable_FromEventObservable","FromEventObservable","sourceObj","eventName","options","target","isFunction","undefined","setupSubscription","handler","unsubscribe","FromEventObservable_isNodeList","FromEventObservable_isHTMLCollection","i","len","length","addEventListener","removeEventListener","FromEventObservable_isEventTarget","source_1","on","off","FromEventObservable_isJQueryStyleEventEmitter","source_2","addListener","removeListener","FromEventObservable_isNodeStyleEventEmitter","TypeError","source_3","Subscription","_subscribe","args","_i","result","tryCatch","errorObject","error","e","Observable","__webpack_exports__","fromEvent_fromEvent","operators_sample","IntervalObservable_extends","interval_interval","IntervalObservable","period","scheduler","scheduler_async","isNumeric","schedule","dispatch","state","index","closed","interval","_observable_fromEvent__WEBPACK_IMPORTED_MODULE_1__","_Observable__WEBPACK_IMPORTED_MODULE_0__","fromEvent","module","exports"],"mappings":"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","file":"11.dd3f3ab2070e382919af.chunk.js","sourcesContent":["import { Component, OnInit, ElementRef } from '@angular/core';\nimport { IMapChange, ICoordinate, WorldMapComponent } from '../_common/custom-components/world-map/world-map.component';\n\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'home'\n  selector: 'home',  // <home></home>\n\n  // Our list of styles in our component. We may add more to compose many styles together\n  styleUrls: ['./home.component.scss'],\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  templateUrl: './home.component.html',\n  host: {\n    'class': 'page'\n  }\n})\nexport class HomeComponent implements OnInit {\n  showList: boolean;\n  showMap: boolean;\n  looper: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  constructor(private element: ElementRef) {\n    this.showList = true;\n    this.showMap = true;\n  }\n\n  ngOnInit() {\n    // this.title.getData().subscribe(data => this.data = data);\n  }\n\n  repositionTheDot(data: IMapChange) {\n    let dot = this.element.nativeElement.querySelector('#dot');\n    // position of Vienna\n    let cords: ICoordinate = WorldMapComponent.GetPercentagePosition(data, 16.363553, 48.186928);\n\n    dot.style.left = `${cords.x}%`;\n    dot.style.top = `${cords.y}%`;\n  }\n\n  setView(type: 'LIST' | 'MAP') {\n    if (type === 'LIST') {\n      this.showList = !this.showList;\n    }\n    if (type === 'MAP') {\n      this.showMap = !this.showMap;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HomeComponent } from './home.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CustomComponentsModule } from '../_common/custom-components/custom-components.module';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../_common/shared/shared.module';\n\nlet routes = [\n  { path: '', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [\n    TranslateModule,\n    SharedModule,\n    CommonModule,\n    RouterModule.forChild(routes),\n    CustomComponentsModule\n  ],\n  declarations: [HomeComponent]\n})\nexport class HomeModule {\n}\n","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample(notifier) {\n    return function (source) { return source.lift(new SampleOperator(notifier)); };\n}\nvar SampleOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        _super.apply(this, arguments);\n        this.hasValue = false;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=sample.js.map\n","/** PURE_IMPORTS_START .._Observable,.._util_tryCatch,.._util_isFunction,.._util_errorObject,.._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { isFunction } from '../util/isFunction';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromEventObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription(unsubscribe));\n    };\n    /** @deprecated internal use only */ FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch(selector).apply(void 0, args);\n            if (result === errorObject) {\n                subscriber.error(errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable));\n//# sourceMappingURL=FromEventObservable.js.map\n","/** PURE_IMPORTS_START ._FromEventObservable PURE_IMPORTS_END */\nimport { FromEventObservable } from './FromEventObservable';\nexport var fromEvent = FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_sample PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { sample } from '../../operator/sample';\nObservable.prototype.sample = sample;\n//# sourceMappingURL=sample.js.map\n","/** PURE_IMPORTS_START .._operators_sample PURE_IMPORTS_END */\nimport { sample as higherOrder } from '../operators/sample';\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample(notifier) {\n    return higherOrder(notifier)(this);\n}\n//# sourceMappingURL=sample.js.map\n","/** PURE_IMPORTS_START .._util_isNumeric,.._Observable,.._scheduler_async PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isNumeric } from '../util/isNumeric';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var IntervalObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) {\n            period = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = async;\n        }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified IScheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` IScheduler to provide a notion of time, but you may pass any\n     * IScheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) {\n            period = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = async;\n        }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    /** @deprecated internal use only */ IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable));\n//# sourceMappingURL=IntervalObservable.js.map\n","/** PURE_IMPORTS_START ._IntervalObservable PURE_IMPORTS_END */\nimport { IntervalObservable } from './IntervalObservable';\nexport var interval = IntervalObservable.create;\n//# sourceMappingURL=interval.js.map\n","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_interval PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { interval as staticInterval } from '../../observable/interval';\nObservable.interval = staticInterval;\n//# sourceMappingURL=interval.js.map\n","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_fromEvent PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { fromEvent as staticFromEvent } from '../../observable/fromEvent';\nObservable.fromEvent = staticFromEvent;\n//# sourceMappingURL=fromEvent.js.map\n","module.exports = \"<breadcrumb pageTitle=\\\"Home\\\"></breadcrumb>\\n\\n<div class=\\\"row btn-toolbar\\\">\\n  <div class=\\\"col\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button type=\\\"button\\\" class=\\\"btn theme-icon-list\\\" (click)=\\\"setView('LIST')\\\"\\n              [ngClass]=\\\"{'btn-primary': showList, 'btn-secondary': !showList }\\\" ></button>\\n      <button type=\\\"button\\\" class=\\\"btn theme-icon-search\\\" (click)=\\\"setView('MAP')\\\"\\n              [ngClass]=\\\"{'btn-primary': showMap, 'btn-secondary': !showMap }\\\" ></button>\\n    </div>\\n  </div>\\n  <div class=\\\"col col-auto\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary theme-icon-plus\\\"></button>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div *ngIf=\\\"showList\\\" [ngClass]=\\\"{'col-lg-6': showMap, 'col-lg-12': !showMap }\\\">\\n    <div class=\\\"row\\\">\\n      <div [ngClass]=\\\"{'col-lg-6': showMap, 'col-lg-3': !showMap }\\\" *ngFor=\\\"let i of looper\\\">\\n        <div class=\\\"card card-with-toolbar\\\">\\n          <div class=\\\"card-content\\\">\\n            <div class=\\\"card-header\\\">\\n              <i class=\\\"theme-icon-data-center float-left\\\"></i>\\n              Card with header\\n            </div>\\n            <div class=\\\"card-block\\\">\\n              <p class=\\\"card-text\\\">Lorem ipsum dolor sit amet.</p>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n              <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\\n            </div>\\n          </div>\\n          <div class=\\\"card-toolbar\\\">\\n            <button class=\\\"btn btn-secondary theme-icon-add float-right\\\" type=\\\"button\\\"></button>\\n            <button class=\\\"btn btn-secondary theme-icon-remove float-right\\\" type=\\\"button\\\"></button>\\n            <button class=\\\"btn btn-secondary theme-icon-edit float-right\\\" type=\\\"button\\\"></button>\\n          </div>\\n        </div>\\n      </div>\\n      <!--<div [ngClass]=\\\"{'col-lg-6': showMap, 'col-lg-3': !showMap }\\\">-->\\n        <!--<div class=\\\"card card-with-toolbar\\\">-->\\n          <!--<div class=\\\"card-content\\\">-->\\n            <!--<div class=\\\"card-header\\\">-->\\n              <!--<i class=\\\"theme-icon-data-center float-left\\\"></i>-->\\n              <!--Card with header-->\\n            <!--</div>-->\\n            <!--<div class=\\\"card-block\\\">-->\\n              <!--<p class=\\\"card-text\\\">Lorem ipsum dolor sit amet.</p>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"card-footer\\\">-->\\n              <!--<a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>-->\\n            <!--</div>-->\\n          <!--</div>-->\\n          <!--<div class=\\\"card-toolbar\\\">-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-add float-right\\\" type=\\\"button\\\"></button>-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-remove float-right\\\" type=\\\"button\\\"></button>-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-edit float-right\\\" type=\\\"button\\\"></button>-->\\n          <!--</div>-->\\n        <!--</div>-->\\n        <!--</div>-->\\n      <!--<div [ngClass]=\\\"{'col-lg-6': showMap, 'col-lg-3': !showMap }\\\">-->\\n        <!--<div class=\\\"card card-with-toolbar\\\">-->\\n          <!--<div class=\\\"card-content\\\">-->\\n            <!--<div class=\\\"card-header\\\">-->\\n              <!--<i class=\\\"theme-icon-data-center float-left\\\"></i>-->\\n              <!--Card with header-->\\n            <!--</div>-->\\n            <!--<div class=\\\"card-block\\\">-->\\n              <!--<p class=\\\"card-text\\\">Lorem ipsum dolor sit amet.</p>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"card-footer\\\">-->\\n              <!--<a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>-->\\n            <!--</div>-->\\n          <!--</div>-->\\n          <!--<div class=\\\"card-toolbar\\\">-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-add float-right\\\" type=\\\"button\\\"></button>-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-remove float-right\\\" type=\\\"button\\\"></button>-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-edit float-right\\\" type=\\\"button\\\"></button>-->\\n          <!--</div>-->\\n        <!--</div>-->\\n        <!--</div>-->\\n      <!--<div [ngClass]=\\\"{'col-lg-6': showMap, 'col-lg-3': !showMap }\\\">-->\\n        <!--<div class=\\\"card card-with-toolbar\\\">-->\\n          <!--<div class=\\\"card-content\\\">-->\\n            <!--<div class=\\\"card-header\\\">-->\\n              <!--<i class=\\\"theme-icon-data-center float-left\\\"></i>-->\\n              <!--Card with header-->\\n            <!--</div>-->\\n            <!--<div class=\\\"card-block\\\">-->\\n              <!--<p class=\\\"card-text\\\">Lorem ipsum dolor sit amet.</p>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"card-footer\\\">-->\\n              <!--<a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>-->\\n            <!--</div>-->\\n          <!--</div>-->\\n          <!--<div class=\\\"card-toolbar\\\">-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-add float-right\\\" type=\\\"button\\\"></button>-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-remove float-right\\\" type=\\\"button\\\"></button>-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-edit float-right\\\" type=\\\"button\\\"></button>-->\\n          <!--</div>-->\\n        <!--</div>-->\\n        <!--</div>-->\\n      <!--<div [ngClass]=\\\"{'col-lg-6': showMap, 'col-lg-3': !showMap }\\\">-->\\n        <!--<div class=\\\"card card-with-toolbar\\\">-->\\n          <!--<div class=\\\"card-content\\\">-->\\n            <!--<div class=\\\"card-header\\\">-->\\n              <!--<i class=\\\"theme-icon-data-center float-left\\\"></i>-->\\n              <!--Card with header-->\\n            <!--</div>-->\\n            <!--<div class=\\\"card-block\\\">-->\\n              <!--<p class=\\\"card-text\\\">Lorem ipsum dolor sit amet.</p>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"card-footer\\\">-->\\n              <!--<a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>-->\\n            <!--</div>-->\\n          <!--</div>-->\\n          <!--<div class=\\\"card-toolbar\\\">-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-add float-right\\\" type=\\\"button\\\"></button>-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-remove float-right\\\" type=\\\"button\\\"></button>-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-edit float-right\\\" type=\\\"button\\\"></button>-->\\n          <!--</div>-->\\n        <!--</div>-->\\n        <!--</div>-->\\n      <!--<div [ngClass]=\\\"{'col-lg-6': showMap, 'col-lg-3': !showMap }\\\">-->\\n        <!--<div class=\\\"card card-with-toolbar\\\">-->\\n          <!--<div class=\\\"card-content\\\">-->\\n            <!--<div class=\\\"card-header\\\">-->\\n              <!--<i class=\\\"theme-icon-data-center float-left\\\"></i>-->\\n              <!--Card with header-->\\n            <!--</div>-->\\n            <!--<div class=\\\"card-block\\\">-->\\n              <!--<p class=\\\"card-text\\\">Lorem ipsum dolor sit amet.</p>-->\\n            <!--</div>-->\\n            <!--<div class=\\\"card-footer\\\">-->\\n              <!--<a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>-->\\n            <!--</div>-->\\n          <!--</div>-->\\n          <!--<div class=\\\"card-toolbar\\\">-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-add float-right\\\" type=\\\"button\\\"></button>-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-remove float-right\\\" type=\\\"button\\\"></button>-->\\n            <!--<button class=\\\"btn btn-secondary theme-icon-edit float-right\\\" type=\\\"button\\\"></button>-->\\n          <!--</div>-->\\n        <!--</div>-->\\n      <!--</div>-->\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"showMap\\\" [ngClass]=\\\"{'col-lg-6': showList, 'col-lg-12': !showList }\\\">\\n    <div world-map id=\\\"world-map\\\" (change)=\\\"repositionTheDot($event)\\\">\\n      <div class=\\\"badge badge-pill badge-primary\\\" id=\\\"dot\\\">Vienna</div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"#world-map {\\n  width: 100%;\\n  height: 100%; }\\n\\n#dot {\\n  position: absolute; }\\n\""],"sourceRoot":"webpack:///"}