{"version":3,"sources":["./src/app/forms/forms.service.ts","./src/app/forms/forms.component.ts","./src/app/forms/forms.module.ts","./src/app/forms/forms.component.html"],"names":["forms_service_FormsService","FormsService","http","this","prototype","getAllStarships","page","get","__decorate","Object","core","forms_component_FormsComponent","FormsComponent","formBuilder","service","_this","planetNames","user","name","favoriteNumber","favoriteColor","observation","optin","newsLetter","movie","firstRate","secondRate","averageRating","colors","id","color","search","Observable","create","observer","next","advancedControlsForm","controls","value","mergeMap","token","getPlanetsAsObservable","ngOnInit","getPlanets","buildBasicControlsForm","buildAdvancedControlsForm","subscribe","response","planets","results","map","planet","treeData","extendTree","getFilteredPlanets","event","filter","item","existing","indexOf","toLowerCase","text$","debounceTime","distinctUntilChanged","term","length","p","RegExp","test","splice","nodeSelectCallback","node","console","debug","basicControlsForm","group","esm5_forms","required","disabledNumber","disabled","planet2","category","randomText","markerCallback","regex","found","exec","result","index","duplicate","some","r","push","res","start","end","special","text","children","residents","resident","selector","host","class","forms_module_routes","path","component","forms_module_FormsPageModule","FormsPageModule","imports","common","shared_module","core_es5","ngx_bootstrap","forRoot","ngx_type_ahead","custom_components_module","router","forChild","providers","declarations","module","exports"],"mappings":"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","file":"8.f4ce7904641b7c602b1a.chunk.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class FormsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAllStarships(page?: number): Observable<any> {\n    return this.http.get(`https://swapi.co/api/planets/?page=${page}`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nimport { User, Colors, Movie, ISWPlanet } from './form.interface';\nimport { FormsService } from './forms.service';\nimport { ICountable } from '../table/table.service';\nimport { ITreeNode } from '../_common/custom-components/tree/tree-node.component';\nimport { IHighlightMarker } from '../_common/custom-components/highlight-area/highlight-area.interface';\n\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'home'\n  selector: 'forms-page',  // <home></home>\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  templateUrl: './forms.component.html',\n  host: {\n    'class': 'page'\n  }\n})\nexport class FormsComponent implements OnInit {\n  user: User;\n  movie: Movie;\n  colors: Array<Colors>;\n  planets: ISWPlanet[];\n  planetNames: string[] = [];\n  search: Observable<string>;\n  treeData: ITreeNode[];\n\n  private basicControlsForm: FormGroup;\n  private advancedControlsForm: FormGroup;\n  private page: number;\n\n  /**\n   * CTOR\n   * @param formBuilder\n   * @param service\n   */\n  constructor(private formBuilder: FormBuilder, private service: FormsService) {\n    this.user = {\n      name: '',\n      favoriteNumber: null,\n      favoriteColor: '',\n      observation: '',\n      optin: null,\n      newsLetter: null\n    };\n    this.movie = {\n      firstRate: null,\n      secondRate: 2,\n      averageRating: 3\n    };\n    this.colors = [\n      { id: 1, color: 'Red' },\n      { id: 2, color: 'Blue' },\n      { id: 3, color: 'Green' }\n    ];\n\n    this.search = Observable.create((observer: any) => {\n      observer.next(this.advancedControlsForm.controls['planet'].value);\n    }).mergeMap((token: Observable<string>) => this.getPlanetsAsObservable(token));\n  }\n\n  ngOnInit() {\n    this.page = 1;\n    this.getPlanets();\n    this.buildBasicControlsForm();\n    this.buildAdvancedControlsForm();\n  }\n\n  /**\n   * Get the planets from the SW api\n   */\n  getPlanets() {\n    this.service.getAllStarships(this.page).subscribe((response: ICountable<ISWPlanet>) => {\n      this.planets = response.results;\n      this.planetNames = this.planets.map((planet: ISWPlanet) => planet.name);\n      this.treeData = this.extendTree(this.planets);\n    });\n  }\n\n  getFilteredPlanets(event: any) {\n    function filterItem(item: string) {\n      let itemUsed = event.existing.indexOf(item) !== -1;\n      if (itemUsed) {\n        return false;\n      }\n      return item.toLowerCase().indexOf(event.value.toLowerCase()) !== -1;\n    }\n\n    this.planetNames = this.planets.map((planet: ISWPlanet) => planet.name).filter(filterItem);\n  }\n\n  /**\n   * Search method for the typeahed control\n   * @param text$\n   */\n\n  getPlanetsAsObservable(text$: Observable<string>) {\n    return text$\n      .debounceTime(200)\n      .distinctUntilChanged()\n      .map((term: any) => term.length < 2 ? []\n        : this.planets.filter((p: any) => new RegExp(term, 'gi').test(p.name)).splice(0, 10));\n  }\n\n  /**\n   * callback executed when a node\n   * is selected on the tree\n   * @param node: The node selected\n   */\n  nodeSelectCallback(node: any) {\n    console.debug(node);\n  }\n\n  private buildBasicControlsForm() {\n    this.basicControlsForm = this.formBuilder.group({\n      name: [this.user.name, Validators.required],\n      favoriteNumber: [this.user.favoriteNumber],\n      disabledNumber: [{ value: 3, disabled: true }],\n      favoriteColor: [this.user.favoriteColor, Validators.required],\n      observation: [this.user.observation, Validators.required],\n      optin: [this.user.optin, Validators.required],\n      newsLetter: [{ value: this.user.newsLetter }]\n    });\n  }\n\n  private buildAdvancedControlsForm() {\n    this.advancedControlsForm = this.formBuilder.group({\n      firstRate: [this.movie.firstRate, Validators.required],\n      secondRate: [this.movie.secondRate, Validators.required],\n      averageRating: [{ value: this.movie.averageRating, disabled: true }],\n      planet: [null, Validators.required],\n      planet2: [{ value: ['Orange', 'Apple', 'Kiwi'], disabled: true }],\n      category: [null, Validators.required],\n      randomText: ['', Validators.required]\n    });\n  }\n\n  private markerCallback(): (value: string) => IHighlightMarker[] {\n    return (value: string) => {\n      // extract all that match regex\n      let regex = new RegExp('angular-\\\\w*', 'g');\n      let found = regex.exec(value);\n      let results = [];\n      while (found) {\n        let result = {\n          value: found[0],\n          index: found.index,\n          duplicate: results.some((r: any) => r.value === found[0])\n        };\n        results.push(result);\n        // get next IP\n        found = regex.exec(value);\n      }\n\n      return results.map((res: any) => {\n        return { start: res.index, end: res.index + res.value.length, special: res.duplicate };\n      });\n    };\n  }\n\n  /**\n   * Extend the planets array and returns\n   * data in the expected format by the TreeInputComponent\n   * @param planets\n   * @returns {ITreeNode[]}\n   */\n  private extendTree(planets: any): ITreeNode[] {\n    return planets.map((planet: ISWPlanet) => {\n      return {\n        text: planet.name,\n        children: planet.residents.map((resident: string) => {\n          return {\n            text: resident,\n            id: resident\n          };\n        })\n      };\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormsComponent } from './forms.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TabsModule, TooltipModule, RatingModule } from 'ngx-bootstrap';\nimport { FormsService } from './forms.service';\nimport { CustomComponentsModule } from '../_common/custom-components/custom-components.module';\nimport { SharedModule } from '../_common/shared/shared.module';\nimport { TypeaheadModule } from 'ngx-type-ahead';\n\nlet routes = [\n  { path: '', component: FormsComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TabsModule,\n    TooltipModule.forRoot(),\n    TypeaheadModule,\n    RatingModule,\n    CustomComponentsModule,\n    RouterModule.forChild(routes)\n  ],\n  providers: [FormsService],\n  declarations: [FormsComponent]\n})\nexport class FormsPageModule {\n}\n","module.exports = \"<breadcrumb pageTitle=\\\"Forms\\\" pageSubtitle=\\\"Park\\\"></breadcrumb>\\n\\n<tabset>\\n  <tab heading=\\\"Basic controls\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h5>Basic form controls</h5>\\n          <form [formGroup]=\\\"basicControlsForm\\\" novalidate>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-12 form-label\\\" for=\\\"name\\\">Name</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter your name...\\\"\\n                       placement=\\\"bottom\\\"\\n                       [tooltip]=\\\"basicControlsForm.controls.name.errors && nameTT\\\" >\\n                <ng-template #nameTT>\\n                  {{'form.NAME_REQUIRED' | translate}}\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-3 form-label form-label-inline\\\" for=\\\"favoriteNumber\\\">Favorite number</label>\\n              <div class=\\\"col-sm-4 col-lg-2\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"favoriteNumber\\\" class=\\\"form-control\\\" id=\\\"favoriteNumber\\\">\\n              </div>\\n              <label class=\\\"col-sm-3 form-label form-label-inline\\\" for=\\\"disabledNumber\\\">Disabled number</label>\\n              <div class=\\\"col-sm-4 col-lg-2\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"disabledNumber\\\" class=\\\"form-control\\\" id=\\\"disabledNumber\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-12 form-label\\\" for=\\\"favoriteColor\\\">Favorite color</label>\\n              <div class=\\\"col-sm-6 col-lg-4\\\">\\n                <select class=\\\"custom-select form-control\\\" formControlName=\\\"favoriteColor\\\" id=\\\"favoriteColor\\\" placement=\\\"right\\\"\\n                        [tooltip]=\\\"basicControlsForm.controls.favoriteColor.errors && favoriteColorTT\\\" placeholder=\\\"Your color\\\">\\n                  <option *ngFor=\\\"let color of colors\\\" [value]=\\\"color.id\\\">{{color.color}}</option>\\n                </select>\\n                <ng-template #favoriteColorTT>\\n                  <div *ngIf=\\\"basicControlsForm.controls.favoriteColor.errors.required\\\">\\n                    {{'form.FAVORITE_COLOR_REQUIRED' | translate}}\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-12 form-label\\\" for=\\\"observation\\\">Observation</label>\\n              <div class=\\\"col-sm-8\\\">\\n                <textarea class=\\\"form-control\\\" formControlName=\\\"observation\\\" id=\\\"observation\\\" rows=\\\"4\\\"\\n                          placeholder=\\\"Enter your observation...\\\" placement=\\\"bottom\\\"\\n                          [tooltip]=\\\"basicControlsForm.controls.observation.errors && observationTT\\\"></textarea>\\n                <ng-template #observationTT>\\n                  <div *ngIf=\\\"basicControlsForm.controls.observation.errors.required\\\">\\n                    This text will be super long text with lorem ipsum dolor sit amet.\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-4 form-label\\\">Opt-in for goodies</label>\\n              <div class=\\\"col-sm-12\\\">\\n                <label class=\\\"custom-control custom-checkbox\\\" placement=\\\"bottom\\\"\\n                       [tooltip]=\\\"basicControlsForm.controls.optin.errors && optinTT\\\">\\n                  <input type=\\\"checkbox\\\" formControlName=\\\"optin\\\" class=\\\"custom-control-input\\\" value=\\\"\\\">\\n                  <span class=\\\"custom-control-indicator\\\"></span>\\n                  <span class=\\\"custom-control-description\\\">Remember my preference</span>\\n                </label>\\n                <ng-template #optinTT class=\\\"bollocks\\\">\\n                  <div *ngIf=\\\"basicControlsForm.controls.optin.errors.required\\\">\\n                    This text will be super long text with lorem ipsum dolor sit amet.\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-4 form-label\\\">Receive news?</label>\\n              <div class=\\\"col-sm-12\\\">\\n                <label class=\\\"custom-control custom-radio\\\">\\n                  <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"Maybe\\\">\\n                  <span class=\\\"custom-control-indicator\\\"></span>\\n                  <span class=\\\"custom-control-description\\\">Maybe</span>\\n                </label>\\n                <label class=\\\"custom-control custom-radio\\\">\\n                  <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"No\\\">\\n                  <span class=\\\"custom-control-indicator\\\"></span>\\n                  <span class=\\\"custom-control-description\\\">Hell, no</span>\\n                </label>\\n                <label class=\\\"custom-control custom-radio\\\">\\n                  <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"Yes\\\">\\n                  <span class=\\\"custom-control-indicator\\\"></span>\\n                  <span class=\\\"custom-control-description\\\">Yeah</span>\\n                </label>\\n              </div>\\n            </div>\\n            <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!basicControlsForm.valid\\\">Save data</button>\\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h5>Form information</h5>\\n          <p>Form Values</p>\\n          <code>\\n            {{basicControlsForm.value | json}}\\n          </code>\\n          <p>Form Status: {{basicControlsForm.status}}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </tab>\\n  <tab heading=\\\"Inline controls\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h5>Inline form controls</h5>\\n          <form [formGroup]=\\\"basicControlsForm\\\" novalidate>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" infield-label=\\\"Name\\\"\\n                       placement=\\\"bottom\\\"\\n                       [tooltip]=\\\"basicControlsForm.controls.favoriteNumber.errors && nameTT\\\" >\\n                <ng-template #nameTT>\\n                  <div *ngIf=\\\"basicControlsForm.controls.name.errors.required\\\">\\n                    {{'form.NAME_REQUIRED' | translate}}\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-6 col-lg-4\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"favoriteNumber\\\" class=\\\"form-control\\\" id=\\\"favoriteNumber\\\" infield-label=\\\"Favorite number\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-6 col-lg-4\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"disabledNumber\\\" class=\\\"form-control\\\" id=\\\"disabledNumber\\\" infield-label=\\\"Disabled number\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-6 col-lg-6\\\">\\n                <select class=\\\"custom-select form-control\\\" formControlName=\\\"favoriteColor\\\" id=\\\"favoriteColor\\\" placement=\\\"right\\\"\\n                        [tooltip]=\\\"basicControlsForm.controls.favoriteColor.errors && favoriteColorTT\\\" infield-label=\\\"Favourite color\\\">\\n                  <option *ngFor=\\\"let color of colors\\\" [value]=\\\"color.id\\\">{{color.color}}</option>\\n                </select>\\n                <ng-template #favoriteColorTT>\\n                  <div *ngIf=\\\"basicControlsForm.controls.favoriteColor.errors.required\\\">\\n                    {{'form.FAVORITE_COLOR_REQUIRED' | translate}}\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-10\\\">\\n                <textarea class=\\\"form-control\\\" formControlName=\\\"observation\\\" id=\\\"observation\\\" rows=\\\"4\\\"\\n                          infield-label=\\\"Observation\\\" placement=\\\"bottom\\\"\\n                          [tooltip]=\\\"basicControlsForm.controls.observation.errors && observationTT\\\"></textarea>\\n                <ng-template #observationTT>\\n                  <div *ngIf=\\\"basicControlsForm.controls.observation.errors.required\\\">\\n                    This text will be super long text with lorem ipsum dolor sit amet.\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\">\\n                <label class=\\\"custom-control custom-checkbox\\\" placement=\\\"bottom\\\"\\n                       [tooltip]=\\\"basicControlsForm.controls.optin.errors && optinTT\\\">\\n                  <input type=\\\"checkbox\\\" formControlName=\\\"optin\\\" class=\\\"custom-control-input\\\" value=\\\"\\\">\\n                  <span class=\\\"custom-control-indicator\\\"></span>\\n                  <span class=\\\"custom-control-description\\\">Remember my preference</span>\\n                </label>\\n                <ng-template #optinTT class=\\\"bollocks\\\">\\n                  <div *ngIf=\\\"basicControlsForm.controls.optin.errors.required\\\">\\n                    This text will be super long text with lorem ipsum dolor sit amet.\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-4 form-label\\\">Receive news?</label>\\n              <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"Maybe\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Maybe</span>\\n                    </label>\\n                  </div>\\n                  <div class=\\\"col-sm-12\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"No\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Hell, no</span>\\n                    </label>\\n                  </div>\\n                  <div class=\\\"col-sm-12\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"Yes\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Yeah</span>\\n                    </label>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!basicControlsForm.valid\\\">Save data</button>\\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h5>Form information</h5>\\n          <p>Form Values</p>\\n          <code>\\n            {{basicControlsForm.value | json}}\\n          </code>\\n          <p>Form Status: {{basicControlsForm.status}}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </tab>\\n  <tab heading=\\\"Advanced controls\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"card card-block\\\">\\n            <h5>Advanced form controls</h5>\\n            <form [formGroup]=\\\"advancedControlsForm\\\" novalidate>\\n              <div class=\\\"row\\\">\\n                <!-- Basic ratings component -->\\n                <div class=\\\"col-sm-8\\\">\\n                  <label for=\\\"firstRate\\\" class=\\\"form-label\\\">Ratings</label><br/>\\n                  <rating formControlName=\\\"firstRate\\\" placement=\\\"right\\\" max=\\\"5\\\" id=\\\"firstRate\\\" tabindex=\\\"0\\\"\\n                          [tooltip]=\\\"advancedControlsForm.controls.firstRate.errors && firstRateTT\\\"\\n                          [customTemplate]=\\\"starTemplate\\\">\\n                  </rating>\\n                  <ng-template #starTemplate let-index=\\\"index\\\" let-value=\\\"value\\\">\\n                    <i *ngIf=\\\"index < value\\\" class=\\\"theme-icon-star\\\"></i>\\n                    <i *ngIf=\\\"index >= value\\\" class=\\\"theme-icon-star-o\\\"></i>\\n                  </ng-template>\\n                  <ng-template #firstRateTT>\\n                    <div *ngIf=\\\"advancedControlsForm.controls.firstRate.errors.required\\\">\\n                      This text will be super long text with lorem ipsum dolor sit amet.\\n                    </div>\\n                  </ng-template>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                  <rating formControlName=\\\"secondRate\\\" max=\\\"5\\\" tabindex=\\\"1\\\"\\n                          [customTemplate]=\\\"starTemplate\\\">\\n                  </rating>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                  <rating formControlName=\\\"averageRating\\\" max=\\\"5\\\" readonly=\\\"true\\\" tabindex=\\\"2\\\"\\n                          [customTemplate]=\\\"starTemplate\\\">\\n                  </rating>\\n                </div>\\n\\n                <!-- static typeahed not editable field -->\\n                <div class=\\\"col-sm-12\\\">\\n                  <label class=\\\"form-label\\\">Static typeahead non editable - Star wars planets </label>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                  <type-ahead class=\\\"form-control\\\" formControlName=\\\"planet\\\"\\n                             infield-label=\\\"Get planet\\\" custom=\\\"true\\\" multi=\\\"true\\\" [suggestions]=\\\"planetNames\\\"\\n                             tabindex=\\\"3\\\">\\n                  </type-ahead>\\n                </div>\\n                <div class=\\\"col-sm-12\\\">\\n                  <label class=\\\"form-label\\\">Disabled typeahead</label>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                  <type-ahead class=\\\"form-control\\\" formControlName=\\\"planet2\\\"\\n                             infield-label=\\\"Get planet\\\" custom=\\\"true\\\" multi=\\\"true\\\" [suggestions]=\\\"planetNames\\\"\\n                             tabindex=\\\"4\\\">\\n                  </type-ahead>\\n                </div>\\n\\n                <!-- Tree component -->\\n                <div class=\\\"col-sm-8\\\">\\n                  <label for=\\\"category\\\" class=\\\"form-label\\\">Tree component</label>\\n                  <tree formControlName=\\\"category\\\" class=\\\"form-control\\\" id=\\\"category\\\" tabindex=\\\"5\\\"\\n                        [content]=\\\"treeData\\\"\\n                        [collapsed]=\\\"true\\\"\\n                        (nodeClick)=\\\"nodeSelectCallback($event)\\\"></tree>\\n                </div>\\n\\n                <!-- Highlight area -->\\n                <div class=\\\"col-sm-8\\\">\\n                  <label for=\\\"randomText\\\" class=\\\"form-label\\\">Highlight area - marks: angular-*</label>\\n                  <highlightarea formControlName=\\\"randomText\\\" [markerCallback]=\\\"markerCallback()\\\" tabindex=\\\"6\\\"\\n                    infield-label=\\\"Highlights\\\"\\n                    class=\\\"form-control\\\" id=\\\"randomText\\\"></highlightarea>\\n                </div>\\n              </div>\\n              <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!advancedControlsForm.valid\\\" tabindex=\\\"7\\\">Save data</button>\\n            </form>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-block\\\">\\n              <h5>Form information</h5>\\n              <p>Form Values</p>\\n              <code>\\n                {{advancedControlsForm.value | json}}\\n              </code>\\n              <p>Form Status: {{basicControlsForm.status}}</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </tab>\\n  <tab heading=\\\"Control Sizing\\\">\\n    <h5>Inputs - Column sizing</h5>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"2x\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"4x\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"6x\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"8x\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"10x\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"12x\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <h5>Half form</h5>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <div class=\\\"row\\\">\\n            <label class=\\\"col-sm-6 form-label form-label-inline\\\">Label for input</label>\\n            <input type=\\\"text\\\" class=\\\"col-sm-6 form-control\\\" placeholder=\\\"Short input\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <h5>Flex label form</h5>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <div class=\\\"row\\\">\\n            <label class=\\\"col col-auto form-label form-label-inline\\\">Label for input</label>\\n            <input type=\\\"text\\\" class=\\\"col form-control\\\" placeholder=\\\"Short input\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <h5>Floating elements</h5>\\n    <div class=\\\"card card-block\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-1\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Short\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Small\\\">\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Normal\\\">\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Long input\\\">\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Medium input\\\">\\n        </div>\\n        <div class=\\\"col-sm-8\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Extra long input\\\">\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Crazy long input\\\">\\n        </div>\\n      </div>\\n    </div>\\n  </tab>\\n</tabset>\\n\""],"sourceRoot":"webpack:///"}