{"version":3,"sources":["./src/app/miscellaneous/custom-modal.component.ts","./src/app/miscellaneous/miscellaneous.component.ts","./src/app/miscellaneous/miscellaneous.module.ts","./node_modules/rxjs/_esm5/operators/sample.js","./node_modules/rxjs/_esm5/observable/FromEventObservable.js","./node_modules/rxjs/_esm5/observable/fromEvent.js","./node_modules/rxjs/_esm5/add/operator/sample.js","./node_modules/rxjs/_esm5/operator/sample.js","./node_modules/rxjs/_esm5/observable/IntervalObservable.js","./node_modules/rxjs/_esm5/observable/interval.js","./node_modules/rxjs/_esm5/add/observable/interval.js","./node_modules/rxjs/_esm5/add/observable/fromEvent.js","./src/app/miscellaneous/miscellaneous.component.html","./src/app/miscellaneous/miscellaneous.component.scss"],"names":["custom_modal_component_CustomModalComponent","CustomModalComponent","prototype","dialogInit","reference","options","this","parentInfo","data","__decorate","Object","core","selector","template","miscellaneous_component_tree","text","children","id","miscellaneous_component_MiscComponent","MiscComponent","modalDialogService","loadingIndicator","viewContainer","element","feedbackService","localeService","dateDisabled","dt","Date","tomorrow","setDate","getDate","date","mode","use","ngOnInit","selectedTreeNode","treeData","treeDataMultiLevel","treeDataMultiLevelWithIcons","icon","openSimpleModal","openDialog","title","childComponent","ngx_modal_dialog","settings","closeButtonClass","openSimpleModalWithCallback","onClose","Promise","resolve","setTimeout","openPromptModal","actionButtons","onAction","reject","openCustomModal","repositionTheDot","dot","nativeElement","querySelector","cords","world_map","GetPercentagePosition","style","left","x","top","y","getTreeData","Observable","of","nodeSelectCallback","node","showLoadingIndicator","_this","start","done","fireToast","type","notify","heading","action","callback","alert","body","host","class","loading_indicator_service","feedback","ngx_bootstrap","miscellaneous_module_routes","path","component","miscellaneous_module_MiscPageModule","MiscPageModule","imports","common","core_es5","forRoot","esm5_forms","custom_components_module","shared_module","router","forChild","declarations","entryComponents","_util_subscribeToResult__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","__extends","d","b","p","hasOwnProperty","__","constructor","create","sample","notifier","source","lift","SampleOperator","call","subscriber","sampleSubscriber","SampleSubscriber","subscription","subscribe","add","_super","apply","arguments","hasValue","_next","value","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","emitValue","notifyComplete","destination","next","_OuterSubscriber__WEBPACK_IMPORTED_MODULE_0__","FromEventObservable_extends","FromEventObservable_toString","toString","FromEventObservable_FromEventObservable","FromEventObservable","sourceObj","eventName","target","isFunction","undefined","setupSubscription","handler","unsubscribe","FromEventObservable_isNodeList","FromEventObservable_isHTMLCollection","i","len","length","addEventListener","removeEventListener","FromEventObservable_isEventTarget","source_1","on","off","FromEventObservable_isJQueryStyleEventEmitter","source_2","addListener","removeListener","FromEventObservable_isNodeStyleEventEmitter","TypeError","source_3","Subscription","_subscribe","args","_i","result","tryCatch","errorObject","error","e","__webpack_exports__","fromEvent_fromEvent","operators_sample","IntervalObservable_extends","interval_interval","IntervalObservable","period","scheduler","scheduler_async","isNumeric","schedule","dispatch","state","index","closed","interval","_observable_fromEvent__WEBPACK_IMPORTED_MODULE_1__","_Observable__WEBPACK_IMPORTED_MODULE_0__","fromEvent","module","exports"],"mappings":"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","file":"5.31f92275b5e0c2e47ec9.chunk.js","sourcesContent":["import { IModalDialog, IModalDialogOptions } from 'ngx-modal-dialog';\nimport { Component, ComponentRef } from '@angular/core';\n\n@Component({\n  selector: 'custom-modal',\n  template: `\n    This component is custom.<br/>\n    This data came from parent: <b>{{parentInfo}}</b>\n  `\n})\nexport class CustomModalComponent implements IModalDialog {\n  parentInfo: string;\n\n  dialogInit(reference: ComponentRef<IModalDialog>, options?: Partial<IModalDialogOptions<string>>) {\n    this.parentInfo = options.data;\n  }\n}\n","import { Component, ElementRef, OnInit, ViewContainerRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { ModalDialogService, SimpleModalComponent } from 'ngx-modal-dialog';\nimport { ICoordinate, IMapChange, WorldMapComponent } from '../_common/custom-components/world-map';\nimport { ITreeNode } from '../_common/custom-components/tree';\nimport { LoadingIndicatorService } from '../_common/shared/loading-indicator';\nimport { FeedbackService } from '../_common/shared/feedback';\nimport { CustomModalComponent } from './custom-modal.component';\nimport { BsLocaleService } from 'ngx-bootstrap';\n\nconst tree = [\n  { text: 'Category 1', children: [{ id: '1', text: 'Sub-Category1' }, { id: '2', text: 'Sub-Category2' }] },\n  { text: 'Category 2', children: [{ id: '1', text: 'Sub-Category1' }] },\n  {\n    text: 'Category 3', children: [\n    { id: '1', text: 'Sub-Category1' },\n    { id: '2', text: 'Sub-Category2' },\n    { id: '3', text: 'Sub-Category3' }\n  ]\n  }\n];\n\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'home'\n  selector: 'misc-page',  // <home></home>\n\n  // Our list of styles in our component. We may add more to compose many styles together\n  styleUrls: ['./miscellaneous.component.scss'],\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  templateUrl: './miscellaneous.component.html',\n  host: {\n    'class': 'page'\n  }\n})\nexport class MiscComponent implements OnInit {\n  // tree node related\n  selectedTreeNode: any;\n\n  // date picker related\n  tomorrow: Date;\n  dateDisabled: { date: Date, mode: string }[] = [];\n  dt: Date = new Date();\n\n  treeData: ITreeNode[];\n  treeDataMultiLevel: ITreeNode[];\n  treeDataMultiLevelWithIcons: ITreeNode[];\n\n  constructor(private modalDialogService: ModalDialogService,\n              private loadingIndicator: LoadingIndicatorService,\n              private viewContainer: ViewContainerRef,\n              private element: ElementRef,\n              private feedbackService: FeedbackService,\n              localeService: BsLocaleService) {\n    (this.tomorrow = new Date()).setDate(this.tomorrow.getDate() + 1);\n    this.dateDisabled = [{ date: this.tomorrow, mode: 'day' }];\n    localeService.use('de');\n  }\n\n//   export interface ITreeNode {\n//   id?: string;\n//   text: string;\n//   icon?: string;\n//   children?: Array<ITreeNode>;\n// }\n\n  ngOnInit() {\n    this.selectedTreeNode = {};\n\n    this.treeData = [{ text: 'Element One' }, { text: 'Element Two' }];\n    this.treeDataMultiLevel = [{\n      text: 'Element One',\n      children: [{ text: 'child 11', children: [{ text: 'child 111' }] }, { text: 'child 12' }]\n    }, {\n      text: 'Element Two',\n      children: [{ text: 'child 21' }, { text: 'child 22', children: [{ text: 'child 221' }] }]\n    }];\n    this.treeDataMultiLevelWithIcons = [{\n      text: 'Element One', icon: 'theme-icon-star',\n      children: [{\n        text: 'child 11',\n        icon: 'theme-icon-list',\n        children: [{ text: 'child 111', icon: 'theme-icon-notification' }]\n      }, { text: 'child 12' }]\n    }, {\n      text: 'Element Two', icon: 'theme-icon-question',\n      children: [{ text: 'child 21', icon: 'theme-icon-cards' }, {\n        text: 'child 22',\n        icon: 'theme-icon-zoom-in',\n        children: [{ text: 'child 221' }]\n      }]\n    }];\n  }\n\n  openSimpleModal() {\n    this.modalDialogService.openDialog(this.viewContainer, {\n      title: 'Simple',\n      childComponent: SimpleModalComponent,\n      settings: {\n        closeButtonClass: 'close theme-icon-close'\n      },\n      data: {\n        text: 'Some text content'\n      }\n    });\n  }\n\n  openSimpleModalWithCallback() {\n    this.modalDialogService.openDialog(this.viewContainer, {\n      title: 'Simple',\n      childComponent: SimpleModalComponent,\n      data: {\n        text: 'Some text content. It will close after 1 sec.'\n      },\n      settings: {\n        closeButtonClass: 'close theme-icon-close'\n      },\n      onClose: () => new Promise((resolve: any) => {\n        setTimeout(() => {\n          resolve();\n        }, 1000);\n      })\n    });\n  }\n\n  openPromptModal() {\n    this.modalDialogService.openDialog(this.viewContainer, {\n      title: 'Simple',\n      childComponent: SimpleModalComponent,\n      data: {\n        text: 'Not so simple modal dialog. Do you agree?\\n(It will close on Fine but fail on close)'\n      },\n      settings: {\n        closeButtonClass: 'close theme-icon-close'\n      },\n      actionButtons: [\n        {\n          text: 'Im fine, thanks',\n          onAction: () => new Promise((resolve: any) => {\n            setTimeout(() => {\n              resolve();\n            }, 20);\n          })\n        },\n        {\n          text: 'Brake, please',\n          onAction: () => new Promise((resolve: any, reject: any) => {\n            setTimeout(() => {\n              reject();\n            }, 20);\n          })\n        }\n      ]\n    });\n  }\n\n  openCustomModal() {\n    this.modalDialogService.openDialog(this.viewContainer, {\n      title: 'Custom',\n      childComponent: CustomModalComponent,\n      settings: {\n        closeButtonClass: 'close theme-icon-close'\n      },\n      data: `Hey, I'm parent!`\n    });\n  }\n\n  repositionTheDot(data: IMapChange) {\n    let dot = this.element.nativeElement.querySelector('#dot');\n    // position of Vienna\n    let cords: ICoordinate = WorldMapComponent.GetPercentagePosition(data, 16.363553, 48.186928);\n\n    dot.style.left = `${cords.x}%`;\n    dot.style.top = `${cords.y}%`;\n  }\n\n  /**\n   * callback executed by the TreeInputComponent\n   * Fetch the data and returns to the tree\n   * @see {ITreeNode}\n   */\n  getTreeData() {\n    return () => {\n      return Observable.of(tree);\n    };\n  }\n\n  /**\n   * callback executed when a node\n   * is selected on the tree\n   * @param node: The node selected\n   */\n  nodeSelectCallback(node: any) {\n    if (node) {\n      this.selectedTreeNode = node;\n    }\n  }\n\n  showLoadingIndicator() {\n    this.loadingIndicator.start();\n    setTimeout(() => {\n      this.loadingIndicator.done();\n    }, 2000);\n  }\n\n  fireToast(type?: number) {\n    if (!type) {\n      this.feedbackService.notify({ heading: 'A random toaster', type: 'success' });\n      return;\n    }\n    if (type === 1) {\n      this.feedbackService.notify({\n        heading: 'A random toaster with action', action: {\n          text: 'My action', callback: () => {\n            alert('this is action');\n          }\n        }\n      });\n    }\n    if (type === 2) {\n      this.feedbackService.notify(\n        { heading: 'A random toaster with body', type: 'danger', body: 'This is some body text' });\n    }\n    if (type === 3) {\n      this.feedbackService.notify({\n        heading: 'A random toaster with action and body',\n        type: 'warning',\n        body: 'This is some body text',\n        action: {\n          text: 'My action', callback: () => {\n            alert('this is action');\n          }\n        }\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { MiscComponent } from './miscellaneous.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommonModule } from '@angular/common';\nimport { ModalDialogModule } from 'ngx-modal-dialog';\nimport { CustomComponentsModule } from '../_common/custom-components/custom-components.module';\nimport { BsDatepickerModule, TabsModule } from 'ngx-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../_common/shared/shared.module';\nimport { CustomModalComponent } from './custom-modal.component';\nimport 'ngx-bootstrap/datepicker/bs-datepicker.css';\n\nlet routes = [\n  { path: '', component: MiscComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    TabsModule,\n    BsDatepickerModule.forRoot(),\n    ModalDialogModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomComponentsModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MiscComponent, CustomModalComponent],\n  entryComponents: [CustomModalComponent]\n})\nexport class MiscPageModule { }\n","/** PURE_IMPORTS_START .._OuterSubscriber,.._util_subscribeToResult PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample(notifier) {\n    return function (source) { return source.lift(new SampleOperator(notifier)); };\n}\nvar SampleOperator = /*@__PURE__*/ (/*@__PURE__*/ function () {\n    function SampleOperator(notifier) {\n        this.notifier = notifier;\n    }\n    SampleOperator.prototype.call = function (subscriber, source) {\n        var sampleSubscriber = new SampleSubscriber(subscriber);\n        var subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    };\n    return SampleOperator;\n}());\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SampleSubscriber = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(SampleSubscriber, _super);\n    function SampleSubscriber() {\n        _super.apply(this, arguments);\n        this.hasValue = false;\n    }\n    SampleSubscriber.prototype._next = function (value) {\n        this.value = value;\n        this.hasValue = true;\n    };\n    SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.notifyComplete = function () {\n        this.emitValue();\n    };\n    SampleSubscriber.prototype.emitValue = function () {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    };\n    return SampleSubscriber;\n}(OuterSubscriber));\n//# sourceMappingURL=sample.js.map\n","/** PURE_IMPORTS_START .._Observable,.._util_tryCatch,.._util_isFunction,.._util_errorObject,.._Subscription PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { Observable } from '../Observable';\nimport { tryCatch } from '../util/tryCatch';\nimport { isFunction } from '../util/isFunction';\nimport { errorObject } from '../util/errorObject';\nimport { Subscription } from '../Subscription';\nvar toString = Object.prototype.toString;\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return !!sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isNodeList(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object NodeList]';\n}\nfunction isHTMLCollection(sourceObj) {\n    return !!sourceObj && toString.call(sourceObj) === '[object HTMLCollection]';\n}\nfunction isEventTarget(sourceObj) {\n    return !!sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var FromEventObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(FromEventObservable, _super);\n    function FromEventObservable(sourceObj, eventName, selector, options) {\n        _super.call(this);\n        this.sourceObj = sourceObj;\n        this.eventName = eventName;\n        this.selector = selector;\n        this.options = options;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Creates an Observable that emits events of a specific type coming from the\n     * given event target.\n     *\n     * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n     * EventEmitter events or others.</span>\n     *\n     * <img src=\"./img/fromEvent.png\" width=\"100%\">\n     *\n     * `fromEvent` accepts as a first argument event target, which is an object with methods\n     * for registering event handler functions. As a second argument it takes string that indicates\n     * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n     * which are described in detail below. If your event target does not match any of the ones listed,\n     * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n     * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n     * handler functions have different names, but they all accept a string describing event type\n     * and function itself, which will be called whenever said event happens.\n     *\n     * Every time resulting Observable is subscribed, event handler function will be registered\n     * to event target on given event type. When that event fires, value\n     * passed as a first argument to registered function will be emitted by output Observable.\n     * When Observable is unsubscribed, function will be unregistered from event target.\n     *\n     * Note that if event target calls registered function with more than one argument, second\n     * and following arguments will not appear in resulting stream. In order to get access to them,\n     * you can pass to `fromEvent` optional project function, which will be called with all arguments\n     * passed to event handler. Output Observable will then emit value returned by project function,\n     * instead of the usual value.\n     *\n     * Remember that event targets listed below are checked via duck typing. It means that\n     * no matter what kind of object you have and no matter what environment you work in,\n     * you can safely use `fromEvent` on that object if it exposes described methods (provided\n     * of course they behave as was described above). So for example if Node.js library exposes\n     * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n     * a good choice.\n     *\n     * If the API you use is more callback then event handler oriented (subscribed\n     * callback function fires only once and thus there is no need to manually\n     * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n     * instead.\n     *\n     * `fromEvent` supports following types of event targets:\n     *\n     * **DOM EventTarget**\n     *\n     * This is an object with `addEventListener` and `removeEventListener` methods.\n     *\n     * In the browser, `addEventListener` accepts - apart from event type string and event\n     * handler function arguments - optional third parameter, which is either an object or boolean,\n     * both used for additional configuration how and when passed function will be called. When\n     * `fromEvent` is used with event target of that type, you can provide this values\n     * as third parameter as well.\n     *\n     * **Node.js EventEmitter**\n     *\n     * An object with `addListener` and `removeListener` methods.\n     *\n     * **JQuery-style event target**\n     *\n     * An object with `on` and `off` methods\n     *\n     * **DOM NodeList**\n     *\n     * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n     *\n     * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n     * it contains and install event handler function in every of them. When returned Observable\n     * is unsubscribed, function will be removed from all Nodes.\n     *\n     * **DOM HtmlCollection**\n     *\n     * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n     * installed and removed in each of elements.\n     *\n     *\n     * @example <caption>Emits clicks happening on the DOM document</caption>\n     * var clicks = Rx.Observable.fromEvent(document, 'click');\n     * clicks.subscribe(x => console.log(x));\n     *\n     * // Results in:\n     * // MouseEvent object logged to console every time a click\n     * // occurs on the document.\n     *\n     *\n     * @example <caption>Use addEventListener with capture option</caption>\n     * var clicksInDocument = Rx.Observable.fromEvent(document, 'click', true); // note optional configuration parameter\n     *                                                                          // which will be passed to addEventListener\n     * var clicksInDiv = Rx.Observable.fromEvent(someDivInDocument, 'click');\n     *\n     * clicksInDocument.subscribe(() => console.log('document'));\n     * clicksInDiv.subscribe(() => console.log('div'));\n     *\n     * // By default events bubble UP in DOM tree, so normally\n     * // when we would click on div in document\n     * // \"div\" would be logged first and then \"document\".\n     * // Since we specified optional `capture` option, document\n     * // will catch event when it goes DOWN DOM tree, so console\n     * // will log \"document\" and then \"div\".\n     *\n     * @see {@link bindCallback}\n     * @see {@link bindNodeCallback}\n     * @see {@link fromEventPattern}\n     *\n     * @param {EventTargetLike} target The DOM EventTarget, Node.js\n     * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n     * @param {string} eventName The event name of interest, being emitted by the\n     * `target`.\n     * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n     * @param {SelectorMethodSignature<T>} [selector] An optional function to\n     * post-process results. It takes the arguments from the event handler and\n     * should return a single value.\n     * @return {Observable<T>}\n     * @static true\n     * @name fromEvent\n     * @owner Observable\n     */\n    FromEventObservable.create = function (target, eventName, options, selector) {\n        if (isFunction(options)) {\n            selector = options;\n            options = undefined;\n        }\n        return new FromEventObservable(target, eventName, selector, options);\n    };\n    FromEventObservable.setupSubscription = function (sourceObj, eventName, handler, subscriber, options) {\n        var unsubscribe;\n        if (isNodeList(sourceObj) || isHTMLCollection(sourceObj)) {\n            for (var i = 0, len = sourceObj.length; i < len; i++) {\n                FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n            }\n        }\n        else if (isEventTarget(sourceObj)) {\n            var source_1 = sourceObj;\n            sourceObj.addEventListener(eventName, handler, options);\n            unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };\n        }\n        else if (isJQueryStyleEventEmitter(sourceObj)) {\n            var source_2 = sourceObj;\n            sourceObj.on(eventName, handler);\n            unsubscribe = function () { return source_2.off(eventName, handler); };\n        }\n        else if (isNodeStyleEventEmitter(sourceObj)) {\n            var source_3 = sourceObj;\n            sourceObj.addListener(eventName, handler);\n            unsubscribe = function () { return source_3.removeListener(eventName, handler); };\n        }\n        else {\n            throw new TypeError('Invalid event target');\n        }\n        subscriber.add(new Subscription(unsubscribe));\n    };\n    /** @deprecated internal use only */ FromEventObservable.prototype._subscribe = function (subscriber) {\n        var sourceObj = this.sourceObj;\n        var eventName = this.eventName;\n        var options = this.options;\n        var selector = this.selector;\n        var handler = selector ? function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i - 0] = arguments[_i];\n            }\n            var result = tryCatch(selector).apply(void 0, args);\n            if (result === errorObject) {\n                subscriber.error(errorObject.e);\n            }\n            else {\n                subscriber.next(result);\n            }\n        } : function (e) { return subscriber.next(e); };\n        FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber, options);\n    };\n    return FromEventObservable;\n}(Observable));\n//# sourceMappingURL=FromEventObservable.js.map\n","/** PURE_IMPORTS_START ._FromEventObservable PURE_IMPORTS_END */\nimport { FromEventObservable } from './FromEventObservable';\nexport var fromEvent = FromEventObservable.create;\n//# sourceMappingURL=fromEvent.js.map\n","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_sample PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { sample } from '../../operator/sample';\nObservable.prototype.sample = sample;\n//# sourceMappingURL=sample.js.map\n","/** PURE_IMPORTS_START .._operators_sample PURE_IMPORTS_END */\nimport { sample as higherOrder } from '../operators/sample';\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample(notifier) {\n    return higherOrder(notifier)(this);\n}\n//# sourceMappingURL=sample.js.map\n","/** PURE_IMPORTS_START .._util_isNumeric,.._Observable,.._scheduler_async PURE_IMPORTS_END */\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b)\n        if (b.hasOwnProperty(p))\n            d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nimport { isNumeric } from '../util/isNumeric';\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport var IntervalObservable = /*@__PURE__*/ (/*@__PURE__*/ function (_super) {\n    __extends(IntervalObservable, _super);\n    function IntervalObservable(period, scheduler) {\n        if (period === void 0) {\n            period = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = async;\n        }\n        _super.call(this);\n        this.period = period;\n        this.scheduler = scheduler;\n        if (!isNumeric(period) || period < 0) {\n            this.period = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = async;\n        }\n    }\n    /**\n     * Creates an Observable that emits sequential numbers every specified\n     * interval of time, on a specified IScheduler.\n     *\n     * <span class=\"informal\">Emits incremental numbers periodically in time.\n     * </span>\n     *\n     * <img src=\"./img/interval.png\" width=\"100%\">\n     *\n     * `interval` returns an Observable that emits an infinite sequence of\n     * ascending integers, with a constant interval of time of your choosing\n     * between those emissions. The first emission is not sent immediately, but\n     * only after the first period has passed. By default, this operator uses the\n     * `async` IScheduler to provide a notion of time, but you may pass any\n     * IScheduler to it.\n     *\n     * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n     * var numbers = Rx.Observable.interval(1000);\n     * numbers.subscribe(x => console.log(x));\n     *\n     * @see {@link timer}\n     * @see {@link delay}\n     *\n     * @param {number} [period=0] The interval size in milliseconds (by default)\n     * or the time unit determined by the scheduler's clock.\n     * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n     * the emission of values, and providing a notion of \"time\".\n     * @return {Observable} An Observable that emits a sequential number each time\n     * interval.\n     * @static true\n     * @name interval\n     * @owner Observable\n     */\n    IntervalObservable.create = function (period, scheduler) {\n        if (period === void 0) {\n            period = 0;\n        }\n        if (scheduler === void 0) {\n            scheduler = async;\n        }\n        return new IntervalObservable(period, scheduler);\n    };\n    IntervalObservable.dispatch = function (state) {\n        var index = state.index, subscriber = state.subscriber, period = state.period;\n        subscriber.next(index);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index += 1;\n        this.schedule(state, period);\n    };\n    /** @deprecated internal use only */ IntervalObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var period = this.period;\n        var scheduler = this.scheduler;\n        subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {\n            index: index, subscriber: subscriber, period: period\n        }));\n    };\n    return IntervalObservable;\n}(Observable));\n//# sourceMappingURL=IntervalObservable.js.map\n","/** PURE_IMPORTS_START ._IntervalObservable PURE_IMPORTS_END */\nimport { IntervalObservable } from './IntervalObservable';\nexport var interval = IntervalObservable.create;\n//# sourceMappingURL=interval.js.map\n","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_interval PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { interval as staticInterval } from '../../observable/interval';\nObservable.interval = staticInterval;\n//# sourceMappingURL=interval.js.map\n","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_fromEvent PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { fromEvent as staticFromEvent } from '../../observable/fromEvent';\nObservable.fromEvent = staticFromEvent;\n//# sourceMappingURL=fromEvent.js.map\n","module.exports = \"<breadcrumb pageTitle=\\\"Miscellaneous\\\" pageSubtitle=\\\"Park\\\"></breadcrumb>\\n\\n<tabset>\\n  <tab heading=\\\"Modal Dialog\\\">\\n    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"openSimpleModal()\\\">Open simple modal</button>\\n    <button class=\\\"btn btn-warning\\\" type=\\\"button\\\" (click)=\\\"openSimpleModalWithCallback()\\\">Open modal with close\\n      callback\\n    </button>\\n    <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"openPromptModal()\\\">Open modal with prompt</button>\\n    <button class=\\\"btn btn-success\\\" type=\\\"button\\\" (click)=\\\"openCustomModal()\\\">Open custom modal component</button>\\n  </tab>\\n  <tab heading=\\\"Map\\\">\\n    <div world-map id=\\\"world-map\\\" (change)=\\\"repositionTheDot($event)\\\">\\n      <div class=\\\"badge badge-pill badge-primary\\\" id=\\\"dot\\\">Vienna</div>\\n    </div>\\n  </tab>\\n  <tab>\\n    <ng-template tabHeading><span class=\\\"icon-container theme-icon-plus\\\">Tab</span></ng-template>\\n    This tab control\\n  </tab>\\n  <tab heading=\\\"Tree\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h4>Flat tree</h4>\\n          <tree-node *ngFor=\\\"let node of treeData\\\" [content]=\\\"node\\\" [collapsed]=\\\"false\\\"></tree-node>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h4>Normal tree</h4>\\n          <tree-node *ngFor=\\\"let node of treeDataMultiLevel\\\" [content]=\\\"node\\\" [collapsed]=\\\"false\\\"></tree-node>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6 col-sm-12\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h4>Tree with icons</h4>\\n          <tree-node *ngFor=\\\"let node of treeDataMultiLevelWithIcons\\\" [content]=\\\"node\\\" [collapsed]=\\\"false\\\"></tree-node>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </tab>\\n  <tab heading=\\\"Date picker\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 #dp=\\\"bsDatepicker\\\"\\n                 [bsConfig]=\\\"{ showWeekNumbers: false, containerClass: 'theme-blue' }\\\"\\n                 bsDatepicker [(bsValue)]=\\\"dt\\\">\\n          <i class=\\\"form-control-feedback theme-icon-calendar\\\" (click)=\\\"dp.show()\\\"></i>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <div class=\\\"form-group has-feedback\\\">\\n          <input type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 #dp2=\\\"bsDatepicker\\\"\\n                 bsDatepicker [(bsValue)]=\\\"dt\\\">\\n          <i class=\\\"form-control-feedback theme-icon-calendar\\\" (click)=\\\"dp2.show()\\\"></i>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <!--<bs-datepicker [(ngModel)]=\\\"dt\\\"></bs-datepicker>-->\\n      </div>\\n    </div>\\n  </tab>\\n  <tab heading=\\\"Wizard\\\">\\n    <h4>With disabled skip forward</h4>\\n    <wizard>\\n      <simple-wizard-slide wizardTitle=\\\"First slide\\\">Some content on first slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Second slide\\\">Some content on second slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Third slide\\\">Some content on third slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Fourth slide\\\">Some content on fourth slide</simple-wizard-slide>\\n    </wizard>\\n    <h4>With disabled back</h4>\\n    <wizard disableBack=\\\"true\\\">\\n      <simple-wizard-slide wizardTitle=\\\"First slide\\\">Some content on first slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Second slide\\\">Some content on second slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Third slide\\\">Some content on third slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Fourth slide\\\">Some content on fourth slide</simple-wizard-slide>\\n    </wizard>\\n    <h4>With enabled skip forward</h4>\\n    <wizard skipStep=\\\"true\\\">\\n      <simple-wizard-slide wizardTitle=\\\"First slide\\\">Some content on first slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Second slide\\\">Some content on second slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Third slide\\\">Some content on third slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Fourth slide\\\">Some content on fourth slide</simple-wizard-slide>\\n    </wizard>\\n    <h4>Vertical wizard</h4>\\n    <wizard skipStep=\\\"true\\\" vertical=\\\"true\\\">\\n      <simple-wizard-slide wizardTitle=\\\"First slide\\\">\\n        <p>Lorem ipsum dolor sit amet, at usu oblique persequeris, vero eirmod officiis pri ne. Definiebas\\n          concludaturque an vix, populo insolens corrumpit ut eos, ei esse errem pertinax qui. Has at meis fuisset, mel\\n          eius impedit facilis te. Mazim dicam ut per, vix meis dolore ut, et suas praesent vel. Duo an stet\\n          necessitatibus, usu dicta laudem soluta ad. Mea epicurei probatus tacimates ut, nam ut stet libris possit, mel\\n          ex illum mazim.</p>\\n        <p>Utinam noster ex mea. Munere tritani sed eu, mel et ludus viderer quaestio. Ne errem accusamus nam, sit\\n          homero partem placerat eu, stet illud eam in. Oratio tollit essent et vix, graece oporteat ne quo. Has et\\n          ipsum ullum scaevola. Qui ea autem summo latine, ex vel virtute commune, ne putant audire incorrupte vim.\\n          Aeterno aperiri usu ne.</p>\\n        <p>Ei fugit liber disputationi usu, tamquam postulant torquatos ei sed. Elit vitae ad vis, id propriae indoctum\\n          referrentur vix. Vis nostrud probatus adolescens cu, eam te corpora commune, ea facete reprimique ius. Mea\\n          possit aliquip assentior ea, ceteros referrentur an per. Has an lobortis maiestatis, duo officiis voluptaria\\n          constituto ei, ex eum appareat volutpat. Has mollis nostrum posidonium ea, eu postea vidisse nam.</p>\\n        <p>Ea sit facilis lobortis qualisque, sed purto cibo quodsi in. Est intellegat consetetur in. Nostrud dolorem\\n          salutandi sea in, sensibus assueverit ad ius. Vis cu ornatus efficiendi, odio causae incorrupte mel ex.</p>\\n        <p>Pro an posse dicam evertitur, vix id semper legendos. Sea ex consequat dissentiet, ea liber verterem mandamus\\n          sea. Id mea nemore impedit conclusionemque, sonet noster aliquid an sed. Usu te agam probatus, cum regione\\n          labitur ne, et usu adipisci eloquentiam theophrastus. Per ne rebum nonumy persequeris, cu vis dicant tibique\\n          contentiones. At nec invenire adipiscing, ut per iudico voluptaria, vel te sanctus qualisque.</p>\\n      </simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Second slide\\\">Some content on second slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Third slide\\\">Some content on third slide</simple-wizard-slide>\\n      <simple-wizard-slide wizardTitle=\\\"Fourth slide\\\">Some content on fourth slide</simple-wizard-slide>\\n    </wizard>\\n  </tab>\\n  <tab heading=\\\"Loading indicator\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showLoadingIndicator()\\\">Turn on loading indicator for 2 sec\\n    </button>\\n  </tab>\\n  <tab heading=\\\"Toasters and Feedback\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"fireToast()\\\">Fire toast</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"fireToast(1)\\\">Fire toast with action</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"fireToast(2)\\\">Fire toast with body</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"fireToast(3)\\\">Fire toast with body and action</button>\\n  </tab>\\n</tabset>\\n\"","module.exports = \"#world-map {\\n  width: 100%;\\n  height: 100%; }\\n\\n#dot {\\n  position: absolute; }\\n\""],"sourceRoot":"webpack:///"}