{"version":3,"sources":["./node_modules/ngx-type-ahead/index.js","./node_modules/ngx-type-ahead/src/typeahead.component.js","./node_modules/ngx-type-ahead/src/typeahead.module.js","./node_modules/rxjs/_esm5/add/observable/of.js","./node_modules/rxjs/_esm5/add/operator/distinctUntilChanged.js","./node_modules/rxjs/_esm5/add/operator/mergeAll.js","./node_modules/rxjs/_esm5/add/operator/publishReplay.js","./node_modules/rxjs/_esm5/add/operator/take.js","./node_modules/rxjs/_esm5/operator/publishReplay.js","./node_modules/rxjs/_esm5/operator/take.js","./src/app/forms/forms.component.html","./src/app/forms/forms.component.ts","./src/app/forms/forms.module.ts","./src/app/forms/forms.service.ts"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;;;;;;;;;ACNA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC,sCAAsC;AACtC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,0BAA0B,mBAAmB,EAAE;AAC/C;AACA;AACA,KAAK;AACL;AACA,0BAA0B,gCAAgC,EAAE;AAC5D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,cAAc,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,wDAAwD,EAAE;AACrH;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,mEAAmE,EAAE;AACvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK;AACL;AACA,uCAAuC,qBAAqB,wBAAwB,2BAA2B,6BAA6B,wBAAwB,sCAAsC,6CAA6C,sCAAsC,0BAA0B,qBAAqB,OAAO,uBAAuB,4BAA4B,OAAO,6BAA6B,kCAAkC,OAAO,+BAA+B,4BAA4B,wBAAwB,OAAO,mBAAmB,qBAAqB,mBAAmB,uBAAuB,gBAAgB,OAAO,iCAAiC,wBAAwB,OAAO,2CAA2C,4BAA4B,OAAO;AACpyB,uIAAuI,sCAAsC,0HAA0H,2IAA2I,gEAAgE,oUAAoU,kDAAkD,qiBAAqiB,waAAwa,gEAAgE,oOAAoO,0BAA0B;AACnnE,6BAA6B,iFAAiF,2BAA2B,EAAE,gBAAgB;AAC3J,aAAa,IAAI;AACjB;AACA;AACA,iDAAiD;AACjD,KAAK,wCAAwC,kDAAkD,IAAI;AACnG,KAAK,uCAAuC,iDAAiD,IAAI;AACjG,EAAE;AACF;AACA,qBAA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","file":"2.7c9e054f3ff89b8bd2ae.chunk.js","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/typeahead.module\"));\n__export(require(\"./src/typeahead.component\"));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ngx-type-ahead/index.js\n// module id = ./node_modules/ngx-type-ahead/index.js\n// module chunks = 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar Observable_1 = require(\"rxjs/Observable\");\nrequire(\"rxjs/add/operator/debounceTime\");\nrequire(\"rxjs/add/operator/mergeMap\");\nrequire(\"rxjs/add/operator/take\");\nrequire(\"rxjs/add/operator/toArray\");\nrequire(\"rxjs/add/operator/filter\");\nrequire(\"rxjs/add/operator/mergeAll\");\nrequire(\"rxjs/add/operator/publishReplay\");\nrequire(\"rxjs/add/observable/of\");\nvar forms_1 = require(\"@angular/forms\");\nvar KEY_UP = 'keyup';\nvar KEY_DOWN = 'keydown';\nvar ARROW_DOWN = 'ArrowDown';\nvar ARROW_UP = 'ArrowUp';\nvar ESCAPE = 'Escape';\nvar ENTER = 'Enter';\nvar BACKSPACE = 'Backspace';\n/**\n * Sanitize string for string comparison\n * @param {string} text\n */\nvar sanitizeString = function (text) {\n    return text.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').trim();\n};\n/***\n * Usage:\n *\n * <typeahead formControlName=\"myControlName\" [suggestions]=\"['abc', 'def',...]\"></typeahead>\n * <typeahead formControlName=\"myControlName\" [suggestions]=\"Observable.of(['abc', 'def',...])\"></typeahead>\n */\nvar TypeaheadComponent = (function () {\n    /**\n     * CTOR\n     * @param elementRef\n     * @param renderer\n     */\n    function TypeaheadComponent(elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        /** suggestions list - array of strings, objects or Observable */\n        this.suggestions = [];\n        /** field to use from objects as name */\n        this.nameField = 'name';\n        /** field to use from objects as id */\n        this.idField = 'id';\n        /** allow custom values */\n        this.custom = true;\n        /** allow multiple values */\n        this.multi = false;\n        /** use complex suggestions and results */\n        this.complex = false;\n        /** use complex suggestions and results */\n        this.placeholder = '';\n        /** Output value change */\n        this.valueChange = new core_1.EventEmitter();\n        // ui state\n        this.isDisabled = false;\n        this.isExpanded = false;\n        this.dropDownClass = '';\n        this.matches = [];\n        // values\n        this.values = [];\n        this.callbackQueue = [];\n        /**\n         * Default values for TypeaheadSettings\n         * @type TypeaheadSettings\n         * @private\n         */\n        this._settings = {\n            suggestionsLimit: 10,\n            typeDelay: 50,\n            noMatchesText: 'No matches found',\n            tagClass: 'btn badge badge-primary',\n            tagRemoveIconClass: '',\n            dropdownMenuClass: 'dropdown-menu',\n            dropdownMenuExpandedClass: 'dropdown-menu show',\n            dropdownMenuItemClass: 'dropdown-item',\n            dropdownToggleClass: 'dropdown-toggle'\n        };\n        this._inputChangeEvent = new core_1.EventEmitter();\n        this._removeInProgress = false;\n        this.onChange = function (_) { };\n        this.onTouched = function () { };\n    }\n    Object.defineProperty(TypeaheadComponent.prototype, \"settings\", {\n        get: function () {\n            return this._settings;\n        },\n        /** Value of form control */\n        set: function (value) {\n            Object.assign(this._settings, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeaheadComponent.prototype, \"multiBinding\", {\n        /** UI Bindings */\n        get: function () { return this.multi; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeaheadComponent.prototype, \"disabledBinding\", {\n        get: function () { return this.isDisabled || null; },\n        enumerable: true,\n        configurable: true\n    });\n    TypeaheadComponent.prototype.focusOutHandler = function (event) {\n        if (this.isDisabled) {\n            return;\n        }\n        if (event.relatedTarget) {\n            // related target is typeahead, input or one of the buttons\n            if (event.relatedTarget === this.elementRef.nativeElement ||\n                event.relatedTarget.parentElement === this.elementRef.nativeElement ||\n                event.relatedTarget.parentElement.parentElement === this.elementRef.nativeElement) {\n                // grab back input focus after button click since `focus out` cancelled it\n                if (event.target === this._input && event.relatedTarget === this.elementRef.nativeElement) {\n                    this._input.focus();\n                }\n                return;\n            }\n        }\n        // close dropdown\n        this.toggleDropdown(false);\n        // keep just approved tags\n        if (this.multi) {\n            this._input.value = null;\n            this._inputChangeEvent.emit('');\n            return;\n        }\n        // trim values\n        if (!this.custom || this.complex) {\n            this._input.value = this._input.value.trim();\n            // if not match then cleanup the values\n            if (!this.hasMatch(this._input.value)) {\n                this._input.value = this.value = null;\n                this._inputChangeEvent.emit('');\n            }\n        }\n    };\n    /**\n     * On component initialization\n     */\n    TypeaheadComponent.prototype.ngOnInit = function () {\n        this.suggestionsInit(this.suggestions instanceof Observable_1.Observable ?\n            this.suggestions\n                .publishReplay(1)\n                .refCount()\n                .mergeAll() : Observable_1.Observable\n            .of.apply(Observable_1.Observable, this.suggestions));\n        this.toggleDropdown(false);\n        this._inputChangeEvent.emit('');\n    };\n    TypeaheadComponent.prototype.ngOnChanges = function (changes) {\n        if (changes.suggestions && !changes.suggestions.firstChange) {\n            this.allMatchesSubscription.unsubscribe();\n            this.matchesSubscription.unsubscribe();\n            this.ngOnInit();\n        }\n    };\n    TypeaheadComponent.prototype.suggestionsInit = function (suggestion$) {\n        var _this = this;\n        this.matchesSubscription = this._inputChangeEvent\n            .debounceTime(this.settings.typeDelay)\n            .mergeMap(function (value) {\n            var normalizedValue = sanitizeString(value);\n            var filteredSuggestions$ = suggestion$.filter(_this.filterSuggestion(normalizedValue));\n            return _this.settings.suggestionsLimit ?\n                filteredSuggestions$.take(_this.settings.suggestionsLimit).toArray() :\n                filteredSuggestions$.toArray();\n        })\n            .subscribe(function (matches) {\n            _this.matches = matches;\n        });\n        this.allMatchesSubscription = suggestion$.toArray().subscribe(function (suggestions) {\n            _this.allMatches = suggestions;\n            while (_this.callbackQueue.length) {\n                // take first one and process it\n                _this.callbackQueue.shift().apply(_this);\n                _this._inputChangeEvent.emit('');\n            }\n        });\n    };\n    /**\n     * Init method\n     */\n    TypeaheadComponent.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        // set value to input\n        this._input = this.elementRef.nativeElement.querySelector('input');\n        if (!this.multi && this._value) {\n            var callback = function () {\n                _this._input.value = _this.complex ?\n                    _this.extractNameById(_this._value) :\n                    _this._value;\n            };\n            if (this.allMatches || !this.complex) {\n                callback.apply(this);\n            }\n            else {\n                this.callbackQueue.push(callback);\n            }\n        }\n    };\n    /**\n     * Cleanup timeout\n     */\n    TypeaheadComponent.prototype.ngOnDestroy = function () {\n        this.allMatchesSubscription.unsubscribe();\n        this.matchesSubscription.unsubscribe();\n    };\n    Object.defineProperty(TypeaheadComponent.prototype, \"value\", {\n        /**\n         * Value getter\n         * @returns {string|string[]}\n         */\n        get: function () {\n            return this._value;\n        },\n        /**\n         * Value setter\n         * @param value\n         */\n        set: function (value) {\n            if (value === this._value) {\n                return;\n            }\n            this.writeValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Handle input change event\n     * @param {Event} event\n     */\n    TypeaheadComponent.prototype.handleInputChange = function (event) {\n        // Stop the propagation of event up the DOM tree in case\n        // `change` event handler is attached to host component.\n        event.stopPropagation();\n    };\n    /**\n     * Update value on input change\n     * @param event\n     */\n    TypeaheadComponent.prototype.handleInput = function (event) {\n        var target = event.target;\n        // if esc key, close dropdown\n        if ([KEY_DOWN, KEY_UP].includes(event.type) && event.key === ESCAPE) {\n            this.toggleDropdown(false);\n            return;\n        }\n        // if arrow down, select first item in the menu\n        if (event.type === KEY_DOWN && event.key === ARROW_DOWN && this.matches.length > 0) {\n            var button = this.elementRef.nativeElement.querySelector('button[role=\"menuitem\"]:first-child');\n            button.focus();\n            return;\n        }\n        this.toggleDropdown(true);\n        if (this.multi || this.complex) {\n            if (event.type === KEY_UP && event.key === ENTER && target.value !== '') {\n                this.setValue(target.value);\n                this.toggleDropdown(false);\n            }\n            if ([KEY_DOWN, KEY_UP].includes(event.type) && event.key === BACKSPACE) {\n                if (target.value === '') {\n                    if (event.type === KEY_DOWN) {\n                        this._removeInProgress = true;\n                    }\n                    else if (this._removeInProgress) {\n                        if (this.multi && this.values.length) {\n                            this._removeInProgress = false;\n                            this.removeValue(this.values[this.values.length - 1]);\n                        }\n                    }\n                }\n                else if (this.complex && !this.multi && event.type === KEY_DOWN) {\n                    this.value = null;\n                }\n            }\n        }\n        else if (event.type === KEY_UP) {\n            this.setValue(target.value);\n            if (event.key === ENTER && target.value !== '') {\n                this.toggleDropdown(false);\n            }\n        }\n        this._inputChangeEvent.emit(target.value);\n    };\n    /**\n     * Move through collection on dropdown\n     * @param event\n     * @param value\n     */\n    TypeaheadComponent.prototype.handleButton = function (event, value) {\n        var target = event.target;\n        if (event instanceof MouseEvent) {\n            this.setValue(value, true);\n            this._inputChangeEvent.emit(this._input.value);\n            return;\n        }\n        if (event.type === KEY_UP) {\n            if (event.key === ENTER) {\n                this.setValue(value);\n                this._inputChangeEvent.emit(this._input.value);\n                this.toggleDropdown(false);\n            }\n            if (event.key === ESCAPE) {\n                this._input.focus();\n                this.toggleDropdown(false);\n            }\n        }\n        else {\n            if (event.key === ARROW_DOWN && target.nextElementSibling) {\n                target.nextElementSibling.focus();\n            }\n            if (event.key === ARROW_UP && target.previousElementSibling) {\n                target.previousElementSibling.focus();\n            }\n            target.parentNode.scrollTop = target.offsetTop;\n        }\n    };\n    /**\n     * Set value to list of values or as a single value\n     * @param value\n     * @param {boolean} collapseMenu\n     */\n    TypeaheadComponent.prototype.setValue = function (value, collapseMenu) {\n        if ((!this.custom || this.complex) && !this.hasMatch(value)) {\n            return;\n        }\n        if (this.multi) {\n            if (!this.values.includes(value)) {\n                this.value = this.values.concat(value).map(this.extractIdentifier.bind(this));\n                this._input.value = '';\n            }\n        }\n        else {\n            this.value = this.extractIdentifier(value);\n            this._input.value = this.extractName(value);\n        }\n        if (collapseMenu) {\n            this.toggleDropdown(false);\n        }\n        // refocus the input\n        this._input.focus();\n    };\n    /**\n     * Remove value from list of values or clear out the value\n     * @param value\n     */\n    TypeaheadComponent.prototype.removeValue = function (value) {\n        var index = this.values.indexOf(value);\n        if (index !== -1) {\n            if (index === this.values.length - 1) {\n                this.value = this.values.slice(0, -1).map(this.extractIdentifier.bind(this));\n            }\n            else {\n                this.value = this.values.slice(0, index).concat(this.values.slice(index + 1)).map(this.extractIdentifier.bind(this));\n            }\n            this._inputChangeEvent.emit(this._input.value);\n            this._input.focus();\n        }\n    };\n    TypeaheadComponent.prototype.toggleDropdown = function (value) {\n        if (value === undefined) {\n            this._input.focus();\n            this.isExpanded = !this.isExpanded;\n        }\n        else {\n            this.isExpanded = value;\n        }\n        this.dropDownClass = this.isExpanded ? this.settings.dropdownMenuExpandedClass : this.settings.dropdownMenuClass;\n    };\n    /**\n     * Write new value\n     * @param value\n     */\n    TypeaheadComponent.prototype.writeValue = function (value) {\n        // set value\n        this._value = value;\n        this.elementRef.nativeElement.value = value;\n        // modify values list\n        if (this.multi) {\n            if (this.complex) {\n                var callback = function () {\n                    this.values = value ? value.map(this.parseObjectById.bind(this)) : [];\n                    // make sure not found value doesn't break the UI\n                    this.values = this.values.filter(function (val) { return !!val; });\n                };\n                if (this.allMatches || !value) {\n                    callback.apply(this);\n                }\n                else {\n                    this.callbackQueue.push(callback);\n                }\n            }\n            else {\n                this.values = value || [];\n            }\n        }\n        // trigger change\n        if ('createEvent' in document) {\n            var event_1 = document.createEvent('HTMLEvents');\n            event_1.initEvent('change', false, true);\n            this.elementRef.nativeElement.dispatchEvent(event_1);\n        }\n        else {\n            // we need to cast since fireEvent is not standard functionality and works only in IE\n            this.elementRef.nativeElement.fireEvent('onchange');\n        }\n        this.onChange(value);\n    };\n    /**\n     * Set disabled state of the component\n     * @param {boolean} value\n     */\n    TypeaheadComponent.prototype.setDisabledState = function (value) {\n        this.isDisabled = value;\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', value);\n    };\n    TypeaheadComponent.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    TypeaheadComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    /**\n     * @param {string} filter\n     * @returns {(value: any) => boolean}\n     */\n    TypeaheadComponent.prototype.filterSuggestion = function (filter) {\n        var _this = this;\n        return function (value) {\n            if (_this.values.includes(value)) {\n                return false;\n            }\n            if (typeof value === 'string') {\n                return sanitizeString(value).includes(filter);\n            }\n            else {\n                return sanitizeString(value[_this.nameField]).includes(filter) &&\n                    !_this.values.some(function (element) { return element[_this.idField] === value[_this.idField]; });\n            }\n        };\n    };\n    /**\n     * Check if value has match\n     * @param {string | Object} value\n     * @returns {boolean}\n     */\n    TypeaheadComponent.prototype.hasMatch = function (value) {\n        var sanitizedValue = typeof value === 'string' ? sanitizeString(value) : null;\n        for (var key in this.matches) {\n            if (typeof this.matches[key] === 'string') {\n                var sanitizedMatch = sanitizeString(this.matches[key]);\n                if (sanitizedMatch === sanitizedValue) {\n                    return true;\n                }\n            }\n            else {\n                if (typeof value === 'string') {\n                    var sanitizedMatch = sanitizeString(this.matches[key][this.nameField]);\n                    if (sanitizedMatch === sanitizedValue) {\n                        return true;\n                    }\n                }\n                else {\n                    if (this.matches[key][this.idField] === value[this.idField]) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Get name by parsing id into object\n     * @param id\n     * @returns {string}\n     */\n    TypeaheadComponent.prototype.extractNameById = function (id) {\n        var match = this.parseObjectById(id);\n        if (match) {\n            return match[this.nameField];\n        }\n        else {\n            return '';\n        }\n    };\n    /**\n     * Get complex object from id\n     * @param id\n     * @returns {any}\n     */\n    TypeaheadComponent.prototype.parseObjectById = function (id) {\n        for (var key in this.allMatches) {\n            if (this.allMatches[key][this.idField] === id) {\n                return this.allMatches[key];\n            }\n        }\n        return null;\n    };\n    /**\n     * Extract id field from the complex object by name or return value if it's string\n     * @param {string | Object} value\n     * @returns {any}\n     */\n    TypeaheadComponent.prototype.extractIdentifier = function (value) {\n        var _this = this;\n        if (this.complex) {\n            if (typeof value === 'string') {\n                var sanitizedValue_1 = sanitizeString(value);\n                var match = this.allMatches.find(function (item) { return sanitizeString(item[_this.nameField]) === sanitizedValue_1; });\n                if (match) {\n                    return match[this.idField];\n                }\n                throw Error('Critical error: Match ID could not be extracted.');\n            }\n            return value[this.idField];\n        }\n        return value;\n    };\n    /**\n     * Extract name from complex object or return value if it's string\n     * @param {string | Object} value\n     * @returns {any}\n     */\n    TypeaheadComponent.prototype.extractName = function (value) {\n        if (this.complex && typeof value !== 'string') {\n            return value[this.nameField];\n        }\n        return value;\n    };\n    return TypeaheadComponent;\n}());\nTypeaheadComponent.decorators = [\n    { type: core_1.Component, args: [{\n                selector: 'type-ahead',\n                styles: [\"\\n    :host {\\n      height: auto;\\n      min-height: 1em;\\n      position: relative;\\n      display: inline-flex;\\n      flex-wrap: wrap;\\n      -webkit-appearance: textfield;\\n      -moz-appearance: textfield-multiline;\\n      -webkit-rtl-ordering: logical;\\n      user-select: text;\\n      cursor: auto;\\n    }\\n    :host[disabled] {\\n      cursor: not-allowed;\\n    }\\n    :host[disabled] input {\\n      background-color: inherit;\\n    }\\n    :host .type-ahead-badge {\\n      white-space: nowrap;\\n      cursor: pointer;\\n    }\\n    :host input {\\n      border: none;\\n      outline: 0;\\n      line-height: 1;\\n      flex: 1;\\n    }\\n    :host [role=\\\"menuitem\\\"] {\\n      cursor: pointer;\\n    }\\n    :host [role=\\\"menuitem\\\"][disabled] {\\n      cursor: not-allowed;\\n    }\\n  \"],\n                template: \"\\n    <!-- default options item template -->\\n    <ng-template #taItemTemplate let-value=\\\"item\\\">\\n      {{ complex ? value[nameField] : value }}\\n    </ng-template>\\n\\n    <span [ngClass]=\\\"settings.tagClass\\\" class=\\\"type-ahead-badge\\\" *ngFor=\\\"let value of values; let i = index\\\">\\n      <ng-template [ngTemplateOutlet]=\\\"itemTemplate || taItemTemplate\\\"\\n                 [ngTemplateOutletContext]=\\\"{ item: value, index: i, complex: complex, nameField: nameField }\\\"></ng-template>\\n      <span *ngIf=\\\"!isDisabled\\\" aria-hidden=\\\"true\\\" (click)=\\\"removeValue(value)\\\"\\n            [ngClass]=\\\"settings.tagRemoveIconClass\\\">\\u00D7</span>\\n    </span>\\n    <input *ngIf=\\\"!isDisabled || !multi || !values.length\\\" \\n           [disabled]=\\\"isDisabled || null\\\"\\n           placeholder=\\\"{{(isDisabled || values.length) ? '' : placeholder}}\\\"\\n           type=\\\"text\\\" autocomplete=\\\"off\\\"\\n           (keyup)=\\\"handleInput($event)\\\"\\n           (keydown)=\\\"handleInput($event)\\\"\\n           (paste)=\\\"handleInput($event)\\\"\\n           (click)=\\\"toggleDropdown(true)\\\"\\n           (change)=\\\"handleInputChange($event)\\\">\\n    <i *ngIf=\\\"!isDisabled\\\" (click)=\\\"toggleDropdown()\\\" tabindex=\\\"-1\\\"\\n       [ngClass]=\\\"settings.dropdownToggleClass\\\"></i>\\n    <div role=\\\"menu\\\" [attr.class]=\\\"dropDownClass\\\" *ngIf=\\\"matches.length || !custom\\\">\\n      <button *ngFor=\\\"let match of matches; let i = index\\\" type=\\\"button\\\" role=\\\"menuitem\\\" tabindex=\\\"-1\\\"\\n              [ngClass]=\\\"settings.dropdownMenuItemClass\\\"\\n              (mouseup)=\\\"handleButton($event, match)\\\"\\n              (keydown)=\\\"handleButton($event, match)\\\"\\n              (keyup)=\\\"handleButton($event, match)\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"itemTemplate || taItemTemplate\\\"\\n                     [ngTemplateOutletContext]=\\\"{ item: match, index: i, complex: complex, nameField: nameField }\\\"></ng-template>\\n      </button>\\n      <div role=\\\"menuitem\\\" *ngIf=\\\"!matches.length && !custom\\\" tabindex=\\\"-1\\\" aria-disabled=\\\"true\\\" disabled=\\\"true\\\"\\n           [ngClass]=\\\"settings.dropdownMenuItemClass\\\">\\n        {{ settings.noMatchesText }}\\n      </div>\\n    </div>\\n  \",\n                providers: [{ provide: forms_1.NG_VALUE_ACCESSOR, useExisting: core_1.forwardRef(function () { return TypeaheadComponent; }), multi: true }]\n            },] },\n];\n/** @nocollapse */\nTypeaheadComponent.ctorParameters = function () { return [\n    { type: core_1.ElementRef, decorators: [{ type: core_1.Inject, args: [core_1.ElementRef,] },] },\n    { type: core_1.Renderer2, decorators: [{ type: core_1.Inject, args: [core_1.Renderer2,] },] },\n]; };\nTypeaheadComponent.propDecorators = {\n    'suggestions': [{ type: core_1.Input },],\n    'itemTemplate': [{ type: core_1.Input },],\n    'nameField': [{ type: core_1.Input },],\n    'idField': [{ type: core_1.Input },],\n    'custom': [{ type: core_1.Input },],\n    'multi': [{ type: core_1.Input },],\n    'complex': [{ type: core_1.Input },],\n    'placeholder': [{ type: core_1.Input },],\n    'settings': [{ type: core_1.Input },],\n    'multiBinding': [{ type: core_1.HostBinding, args: ['class.multi',] },],\n    'disabledBinding': [{ type: core_1.HostBinding, args: ['attr.disabled',] },],\n    'valueChange': [{ type: core_1.Output },],\n    'focusOutHandler': [{ type: core_1.HostListener, args: ['focusout', ['$event'],] },],\n};\nexports.TypeaheadComponent = TypeaheadComponent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ngx-type-ahead/src/typeahead.component.js\n// module id = ./node_modules/ngx-type-ahead/src/typeahead.component.js\n// module chunks = 2","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar typeahead_component_1 = require(\"./typeahead.component\");\nvar core_1 = require(\"@angular/core\");\nvar common_1 = require(\"@angular/common\");\nvar TypeaheadModule = (function () {\n    function TypeaheadModule() {\n    }\n    return TypeaheadModule;\n}());\nTypeaheadModule.decorators = [\n    { type: core_1.NgModule, args: [{\n                imports: [common_1.CommonModule],\n                declarations: [typeahead_component_1.TypeaheadComponent],\n                exports: [typeahead_component_1.TypeaheadComponent]\n            },] },\n];\n/** @nocollapse */\nTypeaheadModule.ctorParameters = function () { return []; };\nexports.TypeaheadModule = TypeaheadModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ngx-type-ahead/src/typeahead.module.js\n// module id = ./node_modules/ngx-type-ahead/src/typeahead.module.js\n// module chunks = 2","/** PURE_IMPORTS_START .._.._Observable,.._.._observable_of PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { of as staticOf } from '../../observable/of';\nObservable.of = staticOf;\n//# sourceMappingURL=of.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/of.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/of.js\n// module chunks = 2","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_distinctUntilChanged PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { distinctUntilChanged } from '../../operator/distinctUntilChanged';\nObservable.prototype.distinctUntilChanged = distinctUntilChanged;\n//# sourceMappingURL=distinctUntilChanged.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/distinctUntilChanged.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/distinctUntilChanged.js\n// module chunks = 2","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_mergeAll PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { mergeAll } from '../../operator/mergeAll';\nObservable.prototype.mergeAll = mergeAll;\n//# sourceMappingURL=mergeAll.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/mergeAll.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/mergeAll.js\n// module chunks = 2","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_publishReplay PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { publishReplay } from '../../operator/publishReplay';\nObservable.prototype.publishReplay = publishReplay;\n//# sourceMappingURL=publishReplay.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/publishReplay.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/publishReplay.js\n// module chunks = 2","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_take PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { take } from '../../operator/take';\nObservable.prototype.take = take;\n//# sourceMappingURL=take.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/take.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/take.js\n// module chunks = 2","/** PURE_IMPORTS_START .._operators_publishReplay PURE_IMPORTS_END */\nimport { publishReplay as higherOrder } from '../operators/publishReplay';\n/* tslint:enable:max-line-length */\n/**\n * @param bufferSize\n * @param windowTime\n * @param selectorOrScheduler\n * @param scheduler\n * @return {Observable<T> | ConnectableObservable<T>}\n * @method publishReplay\n * @owner Observable\n */\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    return higherOrder(bufferSize, windowTime, selectorOrScheduler, scheduler)(this);\n}\n//# sourceMappingURL=publishReplay.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/publishReplay.js\n// module id = ./node_modules/rxjs/_esm5/operator/publishReplay.js\n// module chunks = 2","/** PURE_IMPORTS_START .._operators_take PURE_IMPORTS_END */\nimport { take as higherOrder } from '../operators/take';\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take(count) {\n    return higherOrder(count)(this);\n}\n//# sourceMappingURL=take.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/operator/take.js\n// module id = ./node_modules/rxjs/_esm5/operator/take.js\n// module chunks = 2","module.exports = \"<breadcrumb pageTitle=\\\"Forms\\\" pageSubtitle=\\\"Park\\\"></breadcrumb>\\n\\n<tabset>\\n  <tab heading=\\\"Basic controls\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h5>Basic form controls</h5>\\n          <form [formGroup]=\\\"basicControlsForm\\\" novalidate>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-12 form-label\\\" for=\\\"name\\\">Name</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"Enter your name...\\\"\\n                       placement=\\\"bottom\\\"\\n                       [tooltip]=\\\"basicControlsForm.controls.name.errors && nameTT\\\" >\\n                <ng-template #nameTT>\\n                  {{'form.NAME_REQUIRED' | translate}}\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-3 form-label form-label-inline\\\" for=\\\"favoriteNumber\\\">Favorite number</label>\\n              <div class=\\\"col-sm-4 col-lg-2\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"favoriteNumber\\\" class=\\\"form-control\\\" id=\\\"favoriteNumber\\\">\\n              </div>\\n              <label class=\\\"col-sm-3 form-label form-label-inline\\\" for=\\\"disabledNumber\\\">Disabled number</label>\\n              <div class=\\\"col-sm-4 col-lg-2\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"disabledNumber\\\" class=\\\"form-control\\\" id=\\\"disabledNumber\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-12 form-label\\\" for=\\\"favoriteColor\\\">Favorite color</label>\\n              <div class=\\\"col-sm-6 col-lg-4\\\">\\n                <select class=\\\"custom-select form-control\\\" formControlName=\\\"favoriteColor\\\" id=\\\"favoriteColor\\\" placement=\\\"right\\\"\\n                        [tooltip]=\\\"basicControlsForm.controls.favoriteColor.errors && favoriteColorTT\\\" placeholder=\\\"Your color\\\">\\n                  <option *ngFor=\\\"let color of colors\\\" [value]=\\\"color.id\\\">{{color.color}}</option>\\n                </select>\\n                <ng-template #favoriteColorTT>\\n                  <div *ngIf=\\\"basicControlsForm.controls.favoriteColor.errors.required\\\">\\n                    {{'form.FAVORITE_COLOR_REQUIRED' | translate}}\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-12 form-label\\\" for=\\\"observation\\\">Observation</label>\\n              <div class=\\\"col-sm-8\\\">\\n                <textarea class=\\\"form-control\\\" formControlName=\\\"observation\\\" id=\\\"observation\\\" rows=\\\"4\\\"\\n                          placeholder=\\\"Enter your observation...\\\" placement=\\\"bottom\\\"\\n                          [tooltip]=\\\"basicControlsForm.controls.observation.errors && observationTT\\\"></textarea>\\n                <ng-template #observationTT>\\n                  <div *ngIf=\\\"basicControlsForm.controls.observation.errors.required\\\">\\n                    This text will be super long text with lorem ipsum dolor sit amet.\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-4 form-label\\\">Opt-in for goodies</label>\\n              <div class=\\\"col-sm-12\\\">\\n                <label class=\\\"custom-control custom-checkbox\\\" placement=\\\"bottom\\\"\\n                       [tooltip]=\\\"basicControlsForm.controls.optin.errors && optinTT\\\">\\n                  <input type=\\\"checkbox\\\" formControlName=\\\"optin\\\" class=\\\"custom-control-input\\\" value=\\\"\\\">\\n                  <span class=\\\"custom-control-indicator\\\"></span>\\n                  <span class=\\\"custom-control-description\\\">Remember my preference</span>\\n                </label>\\n                <ng-template #optinTT class=\\\"bollocks\\\">\\n                  <div *ngIf=\\\"basicControlsForm.controls.optin.errors.required\\\">\\n                    This text will be super long text with lorem ipsum dolor sit amet.\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-4 form-label\\\">Receive news?</label>\\n              <div class=\\\"col-sm-12\\\">\\n                <label class=\\\"custom-control custom-radio\\\">\\n                  <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"Maybe\\\">\\n                  <span class=\\\"custom-control-indicator\\\"></span>\\n                  <span class=\\\"custom-control-description\\\">Maybe</span>\\n                </label>\\n                <label class=\\\"custom-control custom-radio\\\">\\n                  <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"No\\\">\\n                  <span class=\\\"custom-control-indicator\\\"></span>\\n                  <span class=\\\"custom-control-description\\\">Hell, no</span>\\n                </label>\\n                <label class=\\\"custom-control custom-radio\\\">\\n                  <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"Yes\\\">\\n                  <span class=\\\"custom-control-indicator\\\"></span>\\n                  <span class=\\\"custom-control-description\\\">Yeah</span>\\n                </label>\\n              </div>\\n            </div>\\n            <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!basicControlsForm.valid\\\">Save data</button>\\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h5>Form information</h5>\\n          <p>Form Values</p>\\n          <code>\\n            {{basicControlsForm.value | json}}\\n          </code>\\n          <p>Form Status: {{basicControlsForm.status}}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </tab>\\n  <tab heading=\\\"Inline controls\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h5>Inline form controls</h5>\\n          <form [formGroup]=\\\"basicControlsForm\\\" novalidate>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" infield-label=\\\"Name\\\"\\n                       placement=\\\"bottom\\\"\\n                       [tooltip]=\\\"basicControlsForm.controls.favoriteNumber.errors && nameTT\\\" >\\n                <ng-template #nameTT>\\n                  <div *ngIf=\\\"basicControlsForm.controls.name.errors.required\\\">\\n                    {{'form.NAME_REQUIRED' | translate}}\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-6 col-lg-4\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"favoriteNumber\\\" class=\\\"form-control\\\" id=\\\"favoriteNumber\\\" infield-label=\\\"Favorite number\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-6 col-lg-4\\\">\\n                <input type=\\\"number\\\" formControlName=\\\"disabledNumber\\\" class=\\\"form-control\\\" id=\\\"disabledNumber\\\" infield-label=\\\"Disabled number\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-6 col-lg-6\\\">\\n                <select class=\\\"custom-select form-control\\\" formControlName=\\\"favoriteColor\\\" id=\\\"favoriteColor\\\" placement=\\\"right\\\"\\n                        [tooltip]=\\\"basicControlsForm.controls.favoriteColor.errors && favoriteColorTT\\\" infield-label=\\\"Favourite color\\\">\\n                  <option *ngFor=\\\"let color of colors\\\" [value]=\\\"color.id\\\">{{color.color}}</option>\\n                </select>\\n                <ng-template #favoriteColorTT>\\n                  <div *ngIf=\\\"basicControlsForm.controls.favoriteColor.errors.required\\\">\\n                    {{'form.FAVORITE_COLOR_REQUIRED' | translate}}\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-10\\\">\\n                <textarea class=\\\"form-control\\\" formControlName=\\\"observation\\\" id=\\\"observation\\\" rows=\\\"4\\\"\\n                          infield-label=\\\"Observation\\\" placement=\\\"bottom\\\"\\n                          [tooltip]=\\\"basicControlsForm.controls.observation.errors && observationTT\\\"></textarea>\\n                <ng-template #observationTT>\\n                  <div *ngIf=\\\"basicControlsForm.controls.observation.errors.required\\\">\\n                    This text will be super long text with lorem ipsum dolor sit amet.\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12\\\">\\n                <label class=\\\"custom-control custom-checkbox\\\" placement=\\\"bottom\\\"\\n                       [tooltip]=\\\"basicControlsForm.controls.optin.errors && optinTT\\\">\\n                  <input type=\\\"checkbox\\\" formControlName=\\\"optin\\\" class=\\\"custom-control-input\\\" value=\\\"\\\">\\n                  <span class=\\\"custom-control-indicator\\\"></span>\\n                  <span class=\\\"custom-control-description\\\">Remember my preference</span>\\n                </label>\\n                <ng-template #optinTT class=\\\"bollocks\\\">\\n                  <div *ngIf=\\\"basicControlsForm.controls.optin.errors.required\\\">\\n                    This text will be super long text with lorem ipsum dolor sit amet.\\n                  </div>\\n                </ng-template>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <label class=\\\"col-sm-4 form-label\\\">Receive news?</label>\\n              <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"Maybe\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Maybe</span>\\n                    </label>\\n                  </div>\\n                  <div class=\\\"col-sm-12\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"No\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Hell, no</span>\\n                    </label>\\n                  </div>\\n                  <div class=\\\"col-sm-12\\\">\\n                    <label class=\\\"custom-control custom-radio\\\">\\n                      <input type=\\\"radio\\\" formControlName=\\\"newsLetter\\\" class=\\\"custom-control-input\\\" value=\\\"Yes\\\">\\n                      <span class=\\\"custom-control-indicator\\\"></span>\\n                      <span class=\\\"custom-control-description\\\">Yeah</span>\\n                    </label>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!basicControlsForm.valid\\\">Save data</button>\\n          </form>\\n        </div>\\n      </div>\\n      <div class=\\\"col-lg-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <h5>Form information</h5>\\n          <p>Form Values</p>\\n          <code>\\n            {{basicControlsForm.value | json}}\\n          </code>\\n          <p>Form Status: {{basicControlsForm.status}}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </tab>\\n  <tab heading=\\\"Advanced controls\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"card card-block\\\">\\n            <h5>Advanced form controls</h5>\\n            <form [formGroup]=\\\"advancedControlsForm\\\" novalidate>\\n              <div class=\\\"row\\\">\\n                <!-- Basic ratings component -->\\n                <div class=\\\"col-sm-8\\\">\\n                  <label for=\\\"firstRate\\\" class=\\\"form-label\\\">Ratings</label><br/>\\n                  <rating formControlName=\\\"firstRate\\\" placement=\\\"right\\\" max=\\\"5\\\" id=\\\"firstRate\\\" tabindex=\\\"0\\\"\\n                          [tooltip]=\\\"advancedControlsForm.controls.firstRate.errors && firstRateTT\\\"\\n                          [customTemplate]=\\\"starTemplate\\\">\\n                  </rating>\\n                  <ng-template #starTemplate let-index=\\\"index\\\" let-value=\\\"value\\\">\\n                    <i *ngIf=\\\"index < value\\\" class=\\\"theme-icon-star\\\"></i>\\n                    <i *ngIf=\\\"index >= value\\\" class=\\\"theme-icon-star-o\\\"></i>\\n                  </ng-template>\\n                  <ng-template #firstRateTT>\\n                    <div *ngIf=\\\"advancedControlsForm.controls.firstRate.errors.required\\\">\\n                      This text will be super long text with lorem ipsum dolor sit amet.\\n                    </div>\\n                  </ng-template>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                  <rating formControlName=\\\"secondRate\\\" max=\\\"5\\\" tabindex=\\\"1\\\"\\n                          [customTemplate]=\\\"starTemplate\\\">\\n                  </rating>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                  <rating formControlName=\\\"averageRating\\\" max=\\\"5\\\" readonly=\\\"true\\\" tabindex=\\\"2\\\"\\n                          [customTemplate]=\\\"starTemplate\\\">\\n                  </rating>\\n                </div>\\n\\n                <!-- static typeahed not editable field -->\\n                <div class=\\\"col-sm-12\\\">\\n                  <label class=\\\"form-label\\\">Static typeahead non editable - Star wars planets </label>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                  <type-ahead class=\\\"form-control\\\" formControlName=\\\"planet\\\"\\n                             infield-label=\\\"Get planet\\\" custom=\\\"true\\\" multi=\\\"true\\\" [suggestions]=\\\"planetNames\\\"\\n                             tabindex=\\\"3\\\">\\n                  </type-ahead>\\n                </div>\\n                <div class=\\\"col-sm-12\\\">\\n                  <label class=\\\"form-label\\\">Disabled typeahead</label>\\n                </div>\\n                <div class=\\\"col-sm-8\\\">\\n                  <type-ahead class=\\\"form-control\\\" formControlName=\\\"planet2\\\"\\n                             infield-label=\\\"Get planet\\\" custom=\\\"true\\\" multi=\\\"true\\\" [suggestions]=\\\"planetNames\\\"\\n                             tabindex=\\\"4\\\">\\n                  </type-ahead>\\n                </div>\\n\\n                <!-- Tree component -->\\n                <div class=\\\"col-sm-8\\\">\\n                  <label for=\\\"category\\\" class=\\\"form-label\\\">Tree component</label>\\n                  <tree formControlName=\\\"category\\\" class=\\\"form-control\\\" id=\\\"category\\\" tabindex=\\\"5\\\"\\n                        [content]=\\\"treeData\\\"\\n                        [collapsed]=\\\"true\\\"\\n                        (nodeClick)=\\\"nodeSelectCallback($event)\\\"></tree>\\n                </div>\\n\\n                <!-- Highlight area -->\\n                <div class=\\\"col-sm-8\\\">\\n                  <label for=\\\"randomText\\\" class=\\\"form-label\\\">Highlight area - marks: angular-*</label>\\n                  <highlightarea formControlName=\\\"randomText\\\" [markerCallback]=\\\"markerCallback()\\\" tabindex=\\\"6\\\"\\n                    infield-label=\\\"Highlights\\\"\\n                    class=\\\"form-control\\\" id=\\\"randomText\\\"></highlightarea>\\n                </div>\\n              </div>\\n              <button class=\\\"btn btn-primary\\\" [disabled]=\\\"!advancedControlsForm.valid\\\" tabindex=\\\"7\\\">Save data</button>\\n            </form>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-block\\\">\\n              <h5>Form information</h5>\\n              <p>Form Values</p>\\n              <code>\\n                {{advancedControlsForm.value | json}}\\n              </code>\\n              <p>Form Status: {{basicControlsForm.status}}</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  </tab>\\n  <tab heading=\\\"Control Sizing\\\">\\n    <h5>Inputs - Column sizing</h5>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-2\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"2x\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-4\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"4x\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"6x\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"8x\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-10\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"10x\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n              <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"12x\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <h5>Half form</h5>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <div class=\\\"row\\\">\\n            <label class=\\\"col-sm-6 form-label form-label-inline\\\">Label for input</label>\\n            <input type=\\\"text\\\" class=\\\"col-sm-6 form-control\\\" placeholder=\\\"Short input\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <h5>Flex label form</h5>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-6\\\">\\n        <div class=\\\"card card-block\\\">\\n          <div class=\\\"row\\\">\\n            <label class=\\\"col col-auto form-label form-label-inline\\\">Label for input</label>\\n            <input type=\\\"text\\\" class=\\\"col form-control\\\" placeholder=\\\"Short input\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <h5>Floating elements</h5>\\n    <div class=\\\"card card-block\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-1\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Short\\\">\\n        </div>\\n        <div class=\\\"col-sm-2\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Small\\\">\\n        </div>\\n        <div class=\\\"col-sm-3\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Normal\\\">\\n        </div>\\n        <div class=\\\"col-sm-6\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Long input\\\">\\n        </div>\\n        <div class=\\\"col-sm-4\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Medium input\\\">\\n        </div>\\n        <div class=\\\"col-sm-8\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Extra long input\\\">\\n        </div>\\n        <div class=\\\"col-sm-12\\\">\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Crazy long input\\\">\\n        </div>\\n      </div>\\n    </div>\\n  </tab>\\n</tabset>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forms/forms.component.html\n// module id = ./src/app/forms/forms.component.html\n// module chunks = 2","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\n\nimport { User, Colors, Movie, ISWPlanet } from './form.interface';\nimport { FormsService } from './forms.service';\nimport { ICountable } from '../table/table.service';\nimport { ITreeNode } from '../_common/custom-components/tree/tree-node.component';\nimport { IHighlightMarker } from '../_common/custom-components/highlight-area/highlight-area.interface';\n\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'home'\n  selector: 'forms-page',  // <home></home>\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  templateUrl: './forms.component.html',\n  host: {\n    'class': 'page'\n  }\n})\nexport class FormsComponent implements OnInit {\n  user: User;\n  movie: Movie;\n  colors: Array<Colors>;\n  planets: ISWPlanet[];\n  planetNames: string[] = [];\n  search: Observable<string>;\n  treeData: ITreeNode[];\n\n  private basicControlsForm: FormGroup;\n  private advancedControlsForm: FormGroup;\n  private page: number;\n\n  /**\n   * CTOR\n   * @param formBuilder\n   * @param service\n   */\n  constructor(private formBuilder: FormBuilder, private service: FormsService) {\n    this.user = {\n      name: '',\n      favoriteNumber: null,\n      favoriteColor: '',\n      observation: '',\n      optin: null,\n      newsLetter: null\n    };\n    this.movie = {\n      firstRate: null,\n      secondRate: 2,\n      averageRating: 3\n    };\n    this.colors = [\n      { id: 1, color: 'Red' },\n      { id: 2, color: 'Blue' },\n      { id: 3, color: 'Green' }\n    ];\n\n    this.search = Observable.create((observer: any) => {\n      observer.next(this.advancedControlsForm.controls['planet'].value);\n    }).mergeMap((token: Observable<string>) => this.getPlanetsAsObservable(token));\n  }\n\n  ngOnInit() {\n    this.page = 1;\n    this.getPlanets();\n    this.buildBasicControlsForm();\n    this.buildAdvancedControlsForm();\n  }\n\n  /**\n   * Get the planets from the SW api\n   */\n  getPlanets() {\n    this.service.getAllStarships(this.page).subscribe((response: ICountable<ISWPlanet>) => {\n      this.planets = response.results;\n      this.planetNames = this.planets.map((planet: ISWPlanet) => planet.name);\n      this.treeData = this.extendTree(this.planets);\n    });\n  }\n\n  getFilteredPlanets(event: any) {\n    function filterItem(item: string) {\n      let itemUsed = event.existing.indexOf(item) !== -1;\n      if (itemUsed) {\n        return false;\n      }\n      return item.toLowerCase().indexOf(event.value.toLowerCase()) !== -1;\n    }\n\n    this.planetNames = this.planets.map((planet: ISWPlanet) => planet.name).filter(filterItem);\n  }\n\n  /**\n   * Search method for the typeahed control\n   * @param text$\n   */\n\n  getPlanetsAsObservable(text$: Observable<string>) {\n    return text$\n      .debounceTime(200)\n      .distinctUntilChanged()\n      .map((term: any) => term.length < 2 ? []\n        : this.planets.filter((p: any) => new RegExp(term, 'gi').test(p.name)).splice(0, 10));\n  }\n\n  /**\n   * callback executed when a node\n   * is selected on the tree\n   * @param node: The node selected\n   */\n  nodeSelectCallback(node: any) {\n    console.debug(node);\n  }\n\n  private buildBasicControlsForm() {\n    this.basicControlsForm = this.formBuilder.group({\n      name: [this.user.name, Validators.required],\n      favoriteNumber: [this.user.favoriteNumber],\n      disabledNumber: [{ value: 3, disabled: true }],\n      favoriteColor: [this.user.favoriteColor, Validators.required],\n      observation: [this.user.observation, Validators.required],\n      optin: [this.user.optin, Validators.required],\n      newsLetter: [{ value: this.user.newsLetter }]\n    });\n  }\n\n  private buildAdvancedControlsForm() {\n    this.advancedControlsForm = this.formBuilder.group({\n      firstRate: [this.movie.firstRate, Validators.required],\n      secondRate: [this.movie.secondRate, Validators.required],\n      averageRating: [{ value: this.movie.averageRating, disabled: true }],\n      planet: [null, Validators.required],\n      planet2: [{ value: ['Orange', 'Apple', 'Kiwi'], disabled: true }],\n      category: [null, Validators.required],\n      randomText: ['', Validators.required]\n    });\n  }\n\n  private markerCallback(): (value: string) => IHighlightMarker[] {\n    return (value: string) => {\n      // extract all that match regex\n      let regex = new RegExp('angular-\\\\w*', 'g');\n      let found = regex.exec(value);\n      let results = [];\n      while (found) {\n        let result = {\n          value: found[0],\n          index: found.index,\n          duplicate: results.some((r: any) => r.value === found[0])\n        };\n        results.push(result);\n        // get next IP\n        found = regex.exec(value);\n      }\n\n      return results.map((res: any) => {\n        return { start: res.index, end: res.index + res.value.length, special: res.duplicate };\n      });\n    };\n  }\n\n  /**\n   * Extend the planets array and returns\n   * data in the expected format by the TreeInputComponent\n   * @param planets\n   * @returns {ITreeNode[]}\n   */\n  private extendTree(planets: any): ITreeNode[] {\n    return planets.map((planet: ISWPlanet) => {\n      return {\n        text: planet.name,\n        children: planet.residents.map((resident: string) => {\n          return {\n            text: resident,\n            id: resident\n          };\n        })\n      };\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/forms.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormsComponent } from './forms.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { TabsModule, TooltipModule, RatingModule } from 'ngx-bootstrap';\nimport { FormsService } from './forms.service';\nimport { CustomComponentsModule } from '../_common/custom-components/custom-components.module';\nimport { SharedModule } from '../_common/shared/shared.module';\nimport { TypeaheadModule } from 'ngx-type-ahead';\n\nlet routes = [\n  { path: '', component: FormsComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TabsModule,\n    TooltipModule.forRoot(),\n    TypeaheadModule,\n    RatingModule,\n    CustomComponentsModule,\n    RouterModule.forChild(routes)\n  ],\n  providers: [FormsService],\n  declarations: [FormsComponent]\n})\nexport class FormsPageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/forms.module.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class FormsService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAllStarships(page?: number): Observable<any> {\n    return this.http.get(`https://swapi.co/api/planets/?page=${page}`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forms/forms.service.ts"],"sourceRoot":"webpack:///"}